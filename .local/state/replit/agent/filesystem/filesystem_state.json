{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a full-stack web application for Phen AI, an AI/technology consulting company. The application is a marketing website showcasing the company's services, industries served, technology capabilities, team information, blog content, and contact functionality. It features a modern, visually appealing design with animations and glassmorphism effects.\n\nThe stack consists of:\n- **Frontend**: React with TypeScript, using Vite as the build tool\n- **Backend**: Express.js server with TypeScript\n- **Database**: PostgreSQL via Drizzle ORM (configured but minimal implementation)\n- **UI**: Shadcn UI components with Tailwind CSS\n- **Routing**: Wouter for client-side routing\n- **Animations**: GSAP for scroll-triggered animations and Framer Motion for component animations\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n\n**Technology Stack**: The frontend uses React 18 with TypeScript, built with Vite for fast development and optimized production builds. The UI is constructed using Shadcn UI components (Radix UI primitives) styled with Tailwind CSS.\n\n**Routing Pattern**: Client-side routing is handled by Wouter, a lightweight React Router alternative. Routes are defined in `client/src/App.tsx` and include pages for landing, industries, technology, about, blog, and contact sections.\n\n**Component Structure**: The application follows a modular component architecture with three main directories:\n- `client/src/components/ui/`: Reusable UI primitives from Shadcn\n- `client/src/components/layout/`: Shared layout components (Header, Footer)\n- `client/src/components/`: Feature-specific components (landing, technology)\n\n**State Management**: React Query (`@tanstack/react-query`) is used for server state management, with a custom query client configured in `lib/queryClient.ts`. Local UI state is managed with React hooks.\n\n**Styling Approach**: The design system uses CSS custom properties for theming, defined in `client/src/index.css`. A dark theme with teal/green accent colors (`--primary: hsl(158, 64%, 52%)`) is the default. Tailwind utilities are extended to support glassmorphism effects and the custom color palette.\n\n**Animation System**: Two animation libraries are used:\n- GSAP with ScrollTrigger for scroll-based animations (loaded via CDN in `index.html`)\n- Framer Motion for component-level animations and transitions\n- Custom hook `useGSAP` abstracts GSAP initialization and provides reduced motion support\n\n**Content Management**: Static content (industries, services, technologies, blog posts, team members) is stored in `client/src/lib/content.ts` as TypeScript interfaces and exported data. This approach allows for type-safe content without requiring a CMS.\n\n## Backend Architecture\n\n**Server Framework**: Express.js server with TypeScript, configured for ES modules. The server handles both API routes and serves the Vite-built frontend in production.\n\n**Development Mode**: In development, Vite runs as middleware within the Express server, enabling HMR (Hot Module Replacement) while maintaining a unified server process. This is configured in `server/vite.ts`.\n\n**API Structure**: API routes are registered in `server/routes.ts` and are prefixed with `/api`. Currently, the route registration is minimal as the application primarily serves static content.\n\n**Storage Layer**: An abstraction layer (`server/storage.ts`) provides a storage interface (`IStorage`) with methods for CRUD operations. The current implementation uses in-memory storage (`MemStorage`) with a basic user model. This design allows for easy swapping to database-backed storage without changing business logic.\n\n**Request Logging**: Custom middleware in `server/index.ts` logs all API requests with timing information, response status, and truncated response bodies for debugging.\n\n## Data Storage Solutions\n\n**Database Configuration**: Drizzle ORM is configured to use PostgreSQL with the Neon serverless driver (`@neondatabase/serverless`). The configuration expects a `DATABASE_URL` environment variable.\n\n**Schema Definition**: Database schema is defined in `shared/schema.ts` using Drizzle's schema builder. Currently includes a `users` table with id, username, and password fields. Zod schemas are generated for validation using `drizzle-zod`.\n\n**Migration Strategy**: Drizzle Kit is configured for schema migrations with the `db:push` script. Migrations are stored in the `./migrations` directory.\n\n**Current State**: While database infrastructure is configured, the application currently uses in-memory storage. The database schema and connection setup are ready for when persistent storage is needed.\n\n## Authentication and Authorization\n\n**Current Implementation**: Basic user model exists in the schema with username/password fields, but no authentication flow is currently implemented.\n\n**Session Management**: The dependency `connect-pg-simple` is installed for PostgreSQL-backed Express sessions, indicating planned session-based authentication.\n\n## External Dependencies\n\n**UI Component Libraries**:\n- Radix UI: Headless UI primitives for all interactive components (dialogs, dropdowns, tooltips, etc.)\n- Shadcn UI: Pre-styled Radix components following the \"New York\" style variant\n- Tailwind CSS: Utility-first CSS framework for styling\n\n**Animation Libraries**:\n- GSAP 3.12.5: Professional-grade JavaScript animation library (loaded via CDN)\n- ScrollTrigger: GSAP plugin for scroll-driven animations\n- Framer Motion: React animation library for component animations\n\n**Form Handling**:\n- React Hook Form: Form state management and validation\n- Zod: Schema validation for forms and data\n- `@hookform/resolvers`: Bridge between React Hook Form and Zod\n\n**Data Fetching**:\n- TanStack Query (React Query): Async state management for server data\n- Native Fetch API: Used for HTTP requests with custom wrapper in `lib/queryClient.ts`\n\n**Database & ORM**:\n- Drizzle ORM: TypeScript-first ORM for SQL databases\n- `@neondatabase/serverless`: PostgreSQL driver for serverless environments\n- Drizzle Kit: CLI tool for schema migrations and management\n\n**Development Tools**:\n- Vite: Build tool and dev server\n- TypeScript: Type safety across the entire stack\n- ESBuild: Used for server-side bundling in production\n- Replit plugins: Development environment enhancements (runtime error overlay, cartographer, dev banner)\n\n**Fonts**:\n- Google Fonts: \"Playfair Display\" (serif) for headings and \"Inter\" (sans-serif) for body text, loaded via CDN\n\n**Build & Deployment**:\n- The application builds to a `dist` directory with separate client (`dist/public`) and server (`dist/index.js`) outputs\n- Production mode serves static files from the build output\n- Server runs on port determined by environment variable or defaults to 5000","size_bytes":6826},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2138},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\n\ndeclare module 'http' {\n  interface IncomingMessage {\n    rawBody: unknown\n  }\n}\napp.use(express.json({\n  verify: (req, _res, buf) => {\n    req.rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2210},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Landing from \"@/pages/landing\";\nimport IndustriesIndex from \"@/pages/industries/index\";\nimport IndustryDetail from \"@/pages/industries/[slug]\";\nimport TechnologyIndex from \"@/pages/technology/index\";\nimport ServiceDetail from \"@/pages/technology/services/[slug]\";\nimport TechnologyDetail from \"@/pages/technology/[slug]\";\nimport About from \"@/pages/about\";\nimport BlogIndex from \"@/pages/blog/index\";\nimport BlogPost from \"@/pages/blog/[slug]\";\nimport Contact from \"@/pages/contact\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Landing} />\n      <Route path=\"/industries\" component={IndustriesIndex} />\n      <Route path=\"/industries/:slug\" component={IndustryDetail} />\n      <Route path=\"/technology\" component={TechnologyIndex} />\n      <Route path=\"/technology/services/:slug\" component={ServiceDetail} />\n      <Route path=\"/technology/:slug\" component={TechnologyDetail} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/blog\" component={BlogIndex} />\n      <Route path=\"/blog/:slug\" component={BlogPost} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1707},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(220, 40%, 5%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(220, 35%, 8%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(220, 35%, 10%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(158, 64%, 52%);\n  --primary-foreground: hsl(220, 40%, 5%);\n  --secondary: hsl(217, 91%, 60%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(220, 30%, 15%);\n  --muted-foreground: hsl(215, 20%, 65%);\n  --accent: hsl(158, 64%, 52%);\n  --accent-foreground: hsl(220, 40%, 5%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(220, 30%, 18%);\n  --input: hsl(220, 30%, 18%);\n  --ring: hsl(158, 64%, 52%);\n  --radius: 0.75rem;\n  --font-sans: \"Inter\", system-ui, sans-serif;\n  --font-serif: \"Playfair Display\", Georgia, serif;\n  --font-mono: Menlo, monospace;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    background: linear-gradient(180deg, hsl(220, 40%, 5%) 0%, hsl(220, 35%, 8%) 100%);\n    overflow-x: hidden;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @apply font-serif;\n  }\n}\n\n@layer utilities {\n  /* Glassmorphism utilities */\n  .glass {\n    background: rgba(255, 255, 255, 0.05);\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .glass-strong {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.15);\n  }\n\n  /* 3D transforms */\n  .preserve-3d {\n    transform-style: preserve-3d;\n    perspective: 1000px;\n  }\n\n  /* Hide scrollbar */\n  .scrollbar-hide {\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n  }\n\n  .scrollbar-hide::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(220, 35%, 8%);\n}\n\n::-webkit-scrollbar-thumb {\n  background: hsl(220, 30%, 18%);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: hsl(220, 25%, 25%);\n}\n\n/* Animation utilities */\n@keyframes orbit {\n  from { transform: rotate(0deg) translateX(250px) rotate(0deg); }\n  to { transform: rotate(360deg) translateX(250px) rotate(-360deg); }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-20px); }\n}\n\n@keyframes shimmer {\n  0% { background-position: -1000px 0; }\n  100% { background-position: 1000px 0; }\n}\n\n@keyframes particle-float {\n  0%, 100% {\n    transform: translate(0, 0);\n    opacity: 0.3;\n  }\n  25% {\n    transform: translate(10px, -15px);\n    opacity: 0.6;\n  }\n  50% {\n    transform: translate(-5px, -30px);\n    opacity: 0.9;\n  }\n  75% {\n    transform: translate(-15px, -15px);\n    opacity: 0.6;\n  }\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n/* Card flip 3D */\n.flip-card {\n  perspective: 1000px;\n}\n\n.flip-card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n}\n\n.flip-card.flipped .flip-card-inner {\n  transform: rotateY(180deg);\n}\n\n.flip-card-front, .flip-card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  border-radius: 1rem;\n  overflow: hidden;\n}\n\n.flip-card-back {\n  transform: rotateY(180deg);\n}\n\n/* Particle animation */\n.particle {\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  background: hsl(158, 64%, 52%);\n  border-radius: 50%;\n  animation: particle-float 8s ease-in-out infinite;\n}\n\n/* Gap reveal effect */\n.gap-reveal {\n  position: relative;\n  overflow: hidden;\n}\n\n.gap-reveal-bg {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 0;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  transition: width 0.8s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.gap-reveal.revealed .gap-reveal-bg {\n  width: 100%;\n}\n\n/* Mobile menu animation */\n.mobile-menu {\n  transform: translateY(-100%);\n  transition: transform 0.3s ease-in-out;\n}\n\n.mobile-menu.open {\n  transform: translateY(0);\n}\n\n/* Reduced motion */\n@media (prefers-reduced-motion: reduce) {\n  *, *::before, *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n}\n","size_bytes":4338},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/content.ts":{"content":"export interface Industry {\n  slug: string;\n  title: string;\n  tagline: string;\n  heroImage: string;\n  overview: string;\n  useCases: { title: string; description: string }[];\n  approach: { step: string; description: string }[];\n  technologies: string[];\n  services: string[];\n  metrics: { label: string; value: string }[];\n}\n\nexport interface Service {\n  slug: string;\n  title: string;\n  icon: string;\n  summary: string;\n  included: string[];\n  process: { step: string; description: string }[];\n  deliverables: string[];\n  tools: string[];\n}\n\nexport interface Technology {\n  slug: string;\n  title: string;\n  icon: string;\n  shortDescription: string;\n  longDescription: string;\n  applications: string[];\n  relatedServices: string[];\n}\n\nexport interface BlogPost {\n  slug: string;\n  title: string;\n  author: string;\n  date: string;\n  heroImage: string;\n  summary: string;\n  content: string;\n  tags: string[];\n  readingTime: number;\n}\n\nexport interface TeamMember {\n  name: string;\n  role: string;\n  headshot: string;\n  bio: string;\n  socials: { platform: string; url: string }[];\n}\n\nexport const industries: Industry[] = [\n  {\n    slug: \"agriculture\",\n    title: \"Agriculture\",\n    tagline: \"AI-driven crop monitoring and yield optimization\",\n    heroImage: \"https://images.unsplash.com/photo-1625246333195-78d9c38ad449?w=1920&h=1080&fit=crop\",\n    overview: \"Transform agricultural operations with computer vision and predictive analytics. Our AI solutions enable early disease detection, optimize irrigation, and maximize crop yields while reducing resource waste.\",\n    useCases: [\n      { title: \"Disease Detection\", description: \"Early identification of crop diseases through image analysis\" },\n      { title: \"Yield Prediction\", description: \"Accurate forecasting of harvest outcomes using historical and real-time data\" },\n      { title: \"Resource Optimization\", description: \"Intelligent management of water, fertilizer, and pesticide usage\" },\n      { title: \"Soil Analysis\", description: \"Comprehensive soil health monitoring and recommendations\" }\n    ],\n    approach: [\n      { step: \"Data Collection\", description: \"Deploy sensors and drones to gather comprehensive field data\" },\n      { step: \"Model Training\", description: \"Train custom models on your specific crops and conditions\" },\n      { step: \"Integration\", description: \"Seamlessly integrate with existing farm management systems\" },\n      { step: \"Continuous Learning\", description: \"Refine models with ongoing data for improved accuracy\" }\n    ],\n    technologies: [\"computer-vision\", \"ai-ml\", \"data-engineering\"],\n    services: [\"ai-mvp-development\", \"custom-automation\"],\n    metrics: [\n      { label: \"Yield Increase\", value: \"23%\" },\n      { label: \"Resource Savings\", value: \"31%\" },\n      { label: \"Detection Accuracy\", value: \"94%\" }\n    ]\n  },\n  {\n    slug: \"ed-tech\",\n    title: \"Ed-Tech\",\n    tagline: \"Immersive learning experiences that engage and educate\",\n    heroImage: \"https://images.unsplash.com/photo-1509062522246-3755977927d7?w=1920&h=1080&fit=crop\",\n    overview: \"Revolutionize education with immersive VR/AR experiences and adaptive learning systems. Our solutions create engaging, effective training environments that improve retention and accelerate skill development.\",\n    useCases: [\n      { title: \"VR Training Simulations\", description: \"Realistic practice environments for complex procedures\" },\n      { title: \"Adaptive Learning Paths\", description: \"AI-driven personalization of educational content\" },\n      { title: \"Virtual Labs\", description: \"Safe, cost-effective experimentation in virtual environments\" },\n      { title: \"Assessment Analytics\", description: \"Data-driven insights into student performance and engagement\" }\n    ],\n    approach: [\n      { step: \"Curriculum Analysis\", description: \"Review existing materials and learning objectives\" },\n      { step: \"Experience Design\", description: \"Create immersive scenarios aligned with educational goals\" },\n      { step: \"Development\", description: \"Build interactive VR/AR experiences with real-time feedback\" },\n      { step: \"Validation\", description: \"Test with educators and learners to ensure effectiveness\" }\n    ],\n    technologies: [\"vr-ar\", \"ai-ml\"],\n    services: [\"immersive-experiences\", \"ai-mvp-development\"],\n    metrics: [\n      { label: \"Retention Improvement\", value: \"67%\" },\n      { label: \"Training Time Reduction\", value: \"42%\" },\n      { label: \"Student Engagement\", value: \"89%\" }\n    ]\n  },\n  {\n    slug: \"legal\",\n    title: \"Legal\",\n    tagline: \"Secure on-premise solutions for document analysis\",\n    heroImage: \"https://images.unsplash.com/photo-1589829545856-d10d557cf95f?w=1920&h=1080&fit=crop\",\n    overview: \"Enhance legal research and document review with secure, on-premise AI solutions. Our systems maintain strict confidentiality while accelerating case preparation and contract analysis.\",\n    useCases: [\n      { title: \"Contract Review\", description: \"Automated analysis of agreements for risks and obligations\" },\n      { title: \"Legal Research\", description: \"Intelligent search and summarization of case law\" },\n      { title: \"Due Diligence\", description: \"Rapid review of large document collections\" },\n      { title: \"Compliance Monitoring\", description: \"Ongoing tracking of regulatory changes and requirements\" }\n    ],\n    approach: [\n      { step: \"Security Assessment\", description: \"Evaluate infrastructure and compliance requirements\" },\n      { step: \"Model Customization\", description: \"Train models on legal domain and firm-specific practices\" },\n      { step: \"On-Premise Deployment\", description: \"Install AI systems within your secure environment\" },\n      { step: \"Ongoing Support\", description: \"Provide updates and maintenance while preserving confidentiality\" }\n    ],\n    technologies: [\"on-prem-ai\", \"ai-ml\"],\n    services: [\"custom-automation\"],\n    metrics: [\n      { label: \"Review Speed\", value: \"10x faster\" },\n      { label: \"Accuracy\", value: \"96%\" },\n      { label: \"Cost Reduction\", value: \"54%\" }\n    ]\n  },\n  {\n    slug: \"finance\",\n    title: \"Finance\",\n    tagline: \"Predictive analytics and risk assessment tools\",\n    heroImage: \"https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=1920&h=1080&fit=crop\",\n    overview: \"Drive smarter financial decisions with predictive analytics and real-time risk assessment. Our AI systems process vast datasets to identify opportunities and mitigate threats.\",\n    useCases: [\n      { title: \"Fraud Detection\", description: \"Real-time identification of suspicious transactions\" },\n      { title: \"Credit Risk Modeling\", description: \"Accurate assessment of borrower creditworthiness\" },\n      { title: \"Portfolio Optimization\", description: \"AI-driven strategies for asset allocation\" },\n      { title: \"Market Prediction\", description: \"Forecasting of trends and price movements\" }\n    ],\n    approach: [\n      { step: \"Data Integration\", description: \"Connect to market feeds and internal systems\" },\n      { step: \"Model Development\", description: \"Build custom models for your specific use cases\" },\n      { step: \"Backtesting\", description: \"Validate predictions against historical data\" },\n      { step: \"Deployment\", description: \"Integrate models into trading and risk platforms\" }\n    ],\n    technologies: [\"ai-ml\", \"data-engineering\"],\n    services: [\"ai-mvp-development\", \"custom-automation\"],\n    metrics: [\n      { label: \"Fraud Detection Rate\", value: \"99.2%\" },\n      { label: \"False Positives\", value: \"-78%\" },\n      { label: \"ROI\", value: \"340%\" }\n    ]\n  },\n  {\n    slug: \"supply-chain\",\n    title: \"Supply Chain\",\n    tagline: \"End-to-end visibility and optimization\",\n    heroImage: \"https://images.unsplash.com/photo-1586528116311-ad8dd3c8310d?w=1920&h=1080&fit=crop\",\n    overview: \"Optimize supply chain operations with predictive analytics and real-time visibility. Our solutions reduce costs, improve delivery times, and enhance inventory management.\",\n    useCases: [\n      { title: \"Demand Forecasting\", description: \"Accurate prediction of product demand across markets\" },\n      { title: \"Inventory Optimization\", description: \"Smart stocking strategies to reduce holding costs\" },\n      { title: \"Route Optimization\", description: \"Efficient delivery planning and logistics coordination\" },\n      { title: \"Supplier Risk Assessment\", description: \"Proactive identification of supply chain vulnerabilities\" }\n    ],\n    approach: [\n      { step: \"Process Mapping\", description: \"Document current supply chain workflows and pain points\" },\n      { step: \"Data Pipeline Setup\", description: \"Establish real-time data feeds from all sources\" },\n      { step: \"Optimization Modeling\", description: \"Develop AI models for forecasting and routing\" },\n      { step: \"Integration\", description: \"Connect to ERP, WMS, and TMS systems\" }\n    ],\n    technologies: [\"ai-ml\", \"data-engineering\"],\n    services: [\"ai-mvp-development\", \"custom-automation\"],\n    metrics: [\n      { label: \"Delivery Time Improvement\", value: \"28%\" },\n      { label: \"Inventory Cost Reduction\", value: \"35%\" },\n      { label: \"Forecast Accuracy\", value: \"92%\" }\n    ]\n  },\n  {\n    slug: \"renewables\",\n    title: \"Renewables\",\n    tagline: \"Smart grid management and efficiency optimization\",\n    heroImage: \"https://images.unsplash.com/photo-1509391366360-2e959784a276?w=1920&h=1080&fit=crop\",\n    overview: \"Maximize renewable energy production and grid efficiency with AI-powered management systems. Our solutions optimize energy distribution, predict maintenance needs, and reduce operational costs.\",\n    useCases: [\n      { title: \"Energy Forecasting\", description: \"Predict solar and wind generation based on weather patterns\" },\n      { title: \"Grid Optimization\", description: \"Balance supply and demand in real-time\" },\n      { title: \"Predictive Maintenance\", description: \"Identify equipment issues before failures occur\" },\n      { title: \"Storage Management\", description: \"Optimize battery charging and discharge cycles\" }\n    ],\n    approach: [\n      { step: \"Data Aggregation\", description: \"Collect data from sensors, weather services, and grid systems\" },\n      { step: \"Model Training\", description: \"Develop predictive models for generation and demand\" },\n      { step: \"System Integration\", description: \"Connect to SCADA and energy management systems\" },\n      { step: \"Optimization\", description: \"Continuously refine strategies based on performance\" }\n    ],\n    technologies: [\"ai-ml\", \"data-engineering\"],\n    services: [\"ai-mvp-development\", \"custom-automation\"],\n    metrics: [\n      { label: \"Efficiency Gain\", value: \"24%\" },\n      { label: \"Downtime Reduction\", value: \"41%\" },\n      { label: \"Cost Savings\", value: \"$2.3M annually\" }\n    ]\n  }\n];\n\nexport const services: Service[] = [\n  {\n    slug: \"ai-mvp-development\",\n    title: \"AI-Powered MVP & Product Development\",\n    icon: \"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\",\n    summary: \"Rapid prototyping and full-scale product development leveraging cutting-edge AI technologies to bring your ideas to market faster.\",\n    included: [\n      \"Requirements analysis and technical feasibility assessment\",\n      \"AI model selection and customization\",\n      \"Full-stack development with modern frameworks\",\n      \"Cloud infrastructure setup and deployment\",\n      \"User testing and iteration\",\n      \"Post-launch support and optimization\"\n    ],\n    process: [\n      { step: \"Discovery\", description: \"Deep dive into your vision, target users, and success metrics\" },\n      { step: \"Architecture\", description: \"Design scalable system architecture and data pipelines\" },\n      { step: \"MVP Build\", description: \"Develop core features with AI capabilities\" },\n      { step: \"Testing\", description: \"Validate with real users and refine based on feedback\" },\n      { step: \"Launch\", description: \"Deploy to production with monitoring and analytics\" },\n      { step: \"Scale\", description: \"Enhance features and performance based on usage data\" }\n    ],\n    deliverables: [\n      \"Fully functional MVP or production application\",\n      \"Technical documentation and architecture diagrams\",\n      \"Deployment pipelines and infrastructure code\",\n      \"User guides and training materials\",\n      \"Performance metrics and analytics dashboards\"\n    ],\n    tools: [\"Python\", \"TensorFlow\", \"PyTorch\", \"React\", \"Node.js\", \"AWS/GCP\", \"Docker\", \"Kubernetes\"]\n  },\n  {\n    slug: \"immersive-experiences\",\n    title: \"Immersive Experience Development\",\n    icon: \"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\",\n    summary: \"VR/AR solutions that transform training, education, and customer engagement through realistic, interactive environments.\",\n    included: [\n      \"Immersive experience design and storyboarding\",\n      \"3D modeling and environment creation\",\n      \"Interactive mechanics and gesture controls\",\n      \"Multi-platform deployment (VR headsets, AR devices, mobile)\",\n      \"Performance optimization for smooth rendering\",\n      \"Analytics and engagement tracking\"\n    ],\n    process: [\n      { step: \"Concept Development\", description: \"Define learning objectives and user journey\" },\n      { step: \"Design\", description: \"Create visual assets, 3D models, and scene layouts\" },\n      { step: \"Development\", description: \"Build interactive experiences with Unity or Unreal\" },\n      { step: \"User Testing\", description: \"Gather feedback on usability and effectiveness\" },\n      { step: \"Refinement\", description: \"Polish interactions and optimize performance\" },\n      { step: \"Deployment\", description: \"Publish to target platforms and app stores\" }\n    ],\n    deliverables: [\n      \"VR/AR application ready for deployment\",\n      \"3D assets and source files\",\n      \"User guides and training documentation\",\n      \"Analytics dashboard for engagement metrics\",\n      \"Platform-specific builds (Oculus, HoloLens, iOS/Android)\"\n    ],\n    tools: [\"Unity\", \"Unreal Engine\", \"Blender\", \"C#\", \"C++\", \"Oculus SDK\", \"ARKit\", \"ARCore\"]\n  },\n  {\n    slug: \"custom-automation\",\n    title: \"Custom Automation & On-Prem AI Solutions\",\n    icon: \"M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z\",\n    summary: \"Secure, on-premise AI implementations for regulated industries, ensuring data privacy and compliance without compromising capability.\",\n    included: [\n      \"Infrastructure assessment and planning\",\n      \"Custom AI model development and training\",\n      \"On-premise deployment and integration\",\n      \"Security hardening and compliance validation\",\n      \"Performance tuning and optimization\",\n      \"Ongoing maintenance and model updates\"\n    ],\n    process: [\n      { step: \"Security Audit\", description: \"Review infrastructure and compliance requirements\" },\n      { step: \"Model Development\", description: \"Train AI models on your data within secure environment\" },\n      { step: \"Integration\", description: \"Connect to existing enterprise systems\" },\n      { step: \"Testing\", description: \"Validate accuracy, security, and performance\" },\n      { step: \"Deployment\", description: \"Install in production with monitoring\" },\n      { step: \"Support\", description: \"Provide updates while maintaining security\" }\n    ],\n    deliverables: [\n      \"On-premise AI system fully operational\",\n      \"Security documentation and compliance reports\",\n      \"Integration guides and API documentation\",\n      \"Training for IT and operations teams\",\n      \"Monitoring dashboards and alerting systems\"\n    ],\n    tools: [\"Python\", \"TensorFlow\", \"PyTorch\", \"Docker\", \"Kubernetes\", \"NVIDIA CUDA\", \"OpenVINO\", \"Custom Hardware\"]\n  }\n];\n\nexport const technologies: Technology[] = [\n  {\n    slug: \"ai-ml\",\n    title: \"AI & Machine Learning\",\n    icon: \"M13 10V3L4 14h7v7l9-11h-7z\",\n    shortDescription: \"Advanced ML models for intelligent automation and analytics\",\n    longDescription: \"Advanced machine learning models and neural networks that power intelligent automation, predictive analytics, and natural language processing. Our AI solutions are designed for production environments with emphasis on accuracy, explainability, and ethical deployment.\",\n    applications: [\n      \"Predictive analytics and forecasting\",\n      \"Natural language processing and understanding\",\n      \"Recommendation systems\",\n      \"Anomaly detection and fraud prevention\",\n      \"Automated decision-making systems\",\n      \"Sentiment analysis and text classification\"\n    ],\n    relatedServices: [\"ai-mvp-development\", \"custom-automation\"]\n  },\n  {\n    slug: \"data-engineering\",\n    title: \"Data Engineering\",\n    icon: \"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\",\n    shortDescription: \"Scalable pipelines that transform data into insights\",\n    longDescription: \"Scalable data pipelines and infrastructure that transform raw data into actionable insights. We build robust ETL processes, data lakes, and real-time streaming architectures that handle billions of events with reliability and performance.\",\n    applications: [\n      \"Real-time data streaming and processing\",\n      \"Data warehouse and lake architecture\",\n      \"ETL pipeline development\",\n      \"Data quality and governance\",\n      \"Business intelligence and reporting\",\n      \"Big data analytics platforms\"\n    ],\n    relatedServices: [\"ai-mvp-development\", \"custom-automation\"]\n  },\n  {\n    slug: \"vr-ar\",\n    title: \"Virtual & Augmented Reality\",\n    icon: \"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\",\n    shortDescription: \"Immersive experiences for training and engagement\",\n    longDescription: \"Immersive VR/AR experiences that revolutionize training, education, and customer engagement. From realistic simulations to interactive product visualizations, we create compelling experiences that drive real business outcomes.\",\n    applications: [\n      \"Training simulations and skill development\",\n      \"Virtual product demonstrations\",\n      \"Remote collaboration environments\",\n      \"Educational experiences and virtual labs\",\n      \"Architectural visualization\",\n      \"Medical procedure training\"\n    ],\n    relatedServices: [\"immersive-experiences\"]\n  },\n  {\n    slug: \"computer-vision\",\n    title: \"Computer Vision\",\n    icon: \"M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\",\n    shortDescription: \"Visual recognition for automation and analysis\",\n    longDescription: \"State-of-the-art visual recognition systems for object detection, image classification, and scene understanding. Our computer vision solutions power everything from quality control automation to advanced driver assistance systems.\",\n    applications: [\n      \"Object detection and tracking\",\n      \"Image classification and tagging\",\n      \"Facial recognition and biometrics\",\n      \"Quality control and defect detection\",\n      \"Autonomous systems and robotics\",\n      \"Medical image analysis\"\n    ],\n    relatedServices: [\"ai-mvp-development\", \"custom-automation\"]\n  },\n  {\n    slug: \"on-prem-ai\",\n    title: \"On-Premise AI Models\",\n    icon: \"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\",\n    shortDescription: \"Secure AI for regulated industries\",\n    longDescription: \"Secure, on-premise AI deployments for regulated industries requiring strict data privacy and compliance. We deliver the power of cloud AI with the security of on-premise infrastructure, ensuring your sensitive data never leaves your environment.\",\n    applications: [\n      \"Healthcare data analysis\",\n      \"Legal document processing\",\n      \"Financial risk assessment\",\n      \"Government intelligence systems\",\n      \"Industrial control systems\",\n      \"Confidential research and development\"\n    ],\n    relatedServices: [\"custom-automation\"]\n  }\n];\n\nexport const blogPosts: BlogPost[] = [\n  {\n    slug: \"ai-agriculture-revolution\",\n    title: \"How AI is Revolutionizing Modern Agriculture\",\n    author: \"Dr. Sarah Chen\",\n    date: \"2024-09-15\",\n    heroImage: \"https://images.unsplash.com/photo-1625246333195-78d9c38ad449?w=1200&h=600&fit=crop\",\n    summary: \"Explore how computer vision and machine learning are transforming crop management, disease detection, and yield optimization in the agricultural sector.\",\n    content: \"Full article content would go here...\",\n    tags: [\"AI\", \"Agriculture\", \"Computer Vision\"],\n    readingTime: 8\n  },\n  {\n    slug: \"vr-training-effectiveness\",\n    title: \"The Science Behind VR Training Effectiveness\",\n    author: \"Marcus Thompson\",\n    date: \"2024-09-08\",\n    heroImage: \"https://images.unsplash.com/photo-1509062522246-3755977927d7?w=1200&h=600&fit=crop\",\n    summary: \"Research shows VR training improves retention by up to 75%. Discover the neuroscience and best practices behind immersive learning experiences.\",\n    content: \"Full article content would go here...\",\n    tags: [\"VR\", \"Education\", \"Training\"],\n    readingTime: 6\n  },\n  {\n    slug: \"on-premise-ai-security\",\n    title: \"On-Premise AI: Balancing Innovation and Security\",\n    author: \"Rachel Kim\",\n    date: \"2024-09-01\",\n    heroImage: \"https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=1200&h=600&fit=crop\",\n    summary: \"For regulated industries, on-premise AI offers the best of both worlds. Learn how to implement powerful AI while maintaining strict data governance.\",\n    content: \"Full article content would go here...\",\n    tags: [\"AI\", \"Security\", \"Compliance\"],\n    readingTime: 10\n  },\n  {\n    slug: \"supply-chain-ai-optimization\",\n    title: \"AI-Powered Supply Chain Optimization\",\n    author: \"James Martinez\",\n    date: \"2024-08-25\",\n    heroImage: \"https://images.unsplash.com/photo-1586528116311-ad8dd3c8310d?w=1200&h=600&fit=crop\",\n    summary: \"Machine learning algorithms are reshaping logistics. See how predictive analytics reduce costs and improve delivery times across the supply chain.\",\n    content: \"Full article content would go here...\",\n    tags: [\"AI\", \"Supply Chain\", \"Logistics\"],\n    readingTime: 7\n  },\n  {\n    slug: \"computer-vision-healthcare\",\n    title: \"Computer Vision in Healthcare: Current Applications\",\n    author: \"Dr. Emily Roberts\",\n    date: \"2024-08-18\",\n    heroImage: \"https://images.unsplash.com/photo-1576091160399-112ba8d25d1d?w=1200&h=600&fit=crop\",\n    summary: \"From diagnostic imaging to surgical assistance, computer vision is transforming patient care. Explore real-world implementations and outcomes.\",\n    content: \"Full article content would go here...\",\n    tags: [\"Computer Vision\", \"Healthcare\", \"Medical\"],\n    readingTime: 9\n  },\n  {\n    slug: \"renewable-energy-ai\",\n    title: \"AI and the Future of Renewable Energy\",\n    author: \"Alex Johnson\",\n    date: \"2024-08-11\",\n    heroImage: \"https://images.unsplash.com/photo-1509391366360-2e959784a276?w=1200&h=600&fit=crop\",\n    summary: \"Smart grids powered by AI are making renewable energy more efficient and reliable. Discover how machine learning optimizes energy distribution.\",\n    content: \"Full article content would go here...\",\n    tags: [\"AI\", \"Renewable Energy\", \"Sustainability\"],\n    readingTime: 8\n  }\n];\n\nexport const teamMembers: TeamMember[] = [\n  {\n    name: \"Dr. Amir Patel\",\n    role: \"Founder & CEO\",\n    headshot: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=400&h=400&fit=crop\",\n    bio: \"With a Ph.D. in Machine Learning and 15 years of industry experience, Amir founded Phen AI to bridge the gap between cutting-edge research and practical business applications. Previously led AI initiatives at Fortune 500 companies.\",\n    socials: [\n      { platform: \"LinkedIn\", url: \"#\" },\n      { platform: \"Twitter\", url: \"#\" }\n    ]\n  },\n  {\n    name: \"Dr. Maya Chen\",\n    role: \"Chief Technology Officer\",\n    headshot: \"https://images.unsplash.com/photo-1580489944761-15a19d654956?w=400&h=400&fit=crop\",\n    bio: \"Maya brings deep expertise in distributed systems and AI infrastructure. She holds a Ph.D. in Computer Science and has published extensively on scalable machine learning architectures.\",\n    socials: [\n      { platform: \"LinkedIn\", url: \"#\" },\n      { platform: \"GitHub\", url: \"#\" }\n    ]\n  },\n  {\n    name: \"Marcus Thompson\",\n    role: \"Head of Immersive Experiences\",\n    headshot: \"https://images.unsplash.com/photo-1519085360753-af0119f7cbe7?w=400&h=400&fit=crop\",\n    bio: \"Marcus is a pioneer in VR/AR development with a background in game design and educational technology. He has created award-winning immersive experiences for leading educational institutions.\",\n    socials: [\n      { platform: \"LinkedIn\", url: \"#\" },\n      { platform: \"Twitter\", url: \"#\" }\n    ]\n  },\n  {\n    name: \"Rachel Kim\",\n    role: \"Lead Data Scientist\",\n    headshot: \"https://images.unsplash.com/photo-1573497019940-1c28c88b4f3e?w=400&h=400&fit=crop\",\n    bio: \"Rachel specializes in building production ML systems with an emphasis on model interpretability and fairness. She has developed AI solutions for healthcare, finance, and agriculture sectors.\",\n    socials: [\n      { platform: \"LinkedIn\", url: \"#\" },\n      { platform: \"GitHub\", url: \"#\" }\n    ]\n  },\n  {\n    name: \"James Martinez\",\n    role: \"Solutions Architect\",\n    headshot: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=400&h=400&fit=crop\",\n    bio: \"James designs scalable AI architectures for enterprise clients. With expertise in cloud and on-premise deployments, he ensures solutions meet both technical and compliance requirements.\",\n    socials: [\n      { platform: \"LinkedIn\", url: \"#\" }\n    ]\n  },\n  {\n    name: \"Dr. Emily Roberts\",\n    role: \"Research Scientist\",\n    headshot: \"https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=400&h=400&fit=crop\",\n    bio: \"Emily's research focuses on computer vision and medical imaging. She collaborates with academic institutions to advance the state of the art in AI-powered diagnostics.\",\n    socials: [\n      { platform: \"LinkedIn\", url: \"#\" },\n      { platform: \"Twitter\", url: \"#\" }\n    ]\n  }\n];\n","size_bytes":26452},"client/src/lib/gsap-utils.ts":{"content":"import { useEffect, useRef } from \"react\";\n\ndeclare global {\n  interface Window {\n    gsap: any;\n    ScrollTrigger: any;\n  }\n}\n\nexport function useGSAP(callback: () => void, dependencies: any[] = []) {\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && window.gsap && window.ScrollTrigger) {\n      window.gsap.registerPlugin(window.ScrollTrigger);\n      callback();\n    }\n  }, dependencies);\n}\n\nexport function useScrollTrigger(\n  ref: React.RefObject<HTMLElement>,\n  animation: any,\n  options: any = {}\n) {\n  useEffect(() => {\n    if (!ref.current || !window.gsap || !window.ScrollTrigger) return;\n\n    const trigger = window.ScrollTrigger.create({\n      trigger: ref.current,\n      ...options,\n      animation,\n    });\n\n    return () => trigger.kill();\n  }, [ref, animation, options]);\n}\n\nexport const checkReducedMotion = () => {\n  if (typeof window === \"undefined\") return false;\n  return window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches;\n};\n","size_bytes":969},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { X, Linkedin, Twitter } from \"lucide-react\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport { teamMembers } from \"@/lib/content\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\";\n\nexport default function About() {\n  const [selectedMember, setSelectedMember] = useState<typeof teamMembers[0] | null>(null);\n\n  useGSAP(() => {\n    if (!window.gsap) return;\n\n    window.gsap.from(\".timeline-item\", {\n      opacity: 0,\n      x: -50,\n      stagger: 0.2,\n      scrollTrigger: {\n        trigger: \".timeline-item\",\n        start: \"top 80%\",\n      },\n    });\n\n    window.gsap.from(\".team-card\", {\n      opacity: 0,\n      scale: 0.9,\n      stagger: 0.1,\n      scrollTrigger: {\n        trigger: \".team-card\",\n        start: \"top 80%\",\n      },\n    });\n  }, []);\n\n  const timeline = [\n    {\n      year: \"2018\",\n      title: \"Foundation\",\n      description: \"Phen AI was founded with a mission to make AI accessible and practical for enterprises across industries.\",\n    },\n    {\n      year: \"2019\",\n      title: \"First Major Client\",\n      description: \"Deployed our first large-scale AI solution for agricultural crop monitoring, achieving 94% accuracy in disease detection.\",\n    },\n    {\n      year: \"2020\",\n      title: \"VR/AR Expansion\",\n      description: \"Launched immersive training platform for healthcare professionals, revolutionizing medical education.\",\n    },\n    {\n      year: \"2022\",\n      title: \"On-Premise Solutions\",\n      description: \"Pioneered secure, on-premise AI deployments for regulated industries including legal and finance sectors.\",\n    },\n    {\n      year: \"2024\",\n      title: \"Global Impact\",\n      description: \"Serving clients across 6 major industries with AI solutions that have generated over $50M in measurable business value.\",\n    },\n  ];\n\n  const values = [\n    {\n      title: \"Excellence\",\n      description: \"We deliver production-ready solutions with uncompromising quality and attention to detail.\",\n      icon: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\",\n    },\n    {\n      title: \"Innovation\",\n      description: \"We stay at the forefront of AI research while prioritizing practical, measurable outcomes.\",\n      icon: \"M13 10V3L4 14h7v7l9-11h-7z\",\n    },\n    {\n      title: \"Integrity\",\n      description: \"We build AI systems that are ethical, explainable, and aligned with our clients' values.\",\n      icon: \"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\",\n    },\n    {\n      title: \"Partnership\",\n      description: \"We work as an extension of your team, committed to your long-term success and growth.\",\n      icon: \"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Hero */}\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-center mb-20\"\n          >\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-bold mb-6\">\n              About Phen AI\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Engineering intelligence you can trust—delivering elegant systems with\n              measurable impact since 2018\n            </p>\n          </motion.div>\n\n          {/* Vision & Mission */}\n          <section className=\"mb-32\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              className=\"glass-strong rounded-2xl p-12 text-center max-w-4xl mx-auto\"\n            >\n              <h2 className=\"text-3xl sm:text-4xl font-serif font-semibold leading-relaxed mb-6\">\n                We design intelligence you can trust—\n                <br />\n                elegant systems that deliver measurable value.\n              </h2>\n              <div className=\"w-24 h-1 bg-primary mx-auto mb-6\"></div>\n              <p className=\"text-xl text-muted-foreground\">\n                Not just an AI company—your engineering partner for lasting impact.\n              </p>\n            </motion.div>\n          </section>\n\n          {/* Timeline */}\n          <section className=\"mb-32\">\n            <h2 className=\"text-3xl font-serif font-bold mb-12 text-center\">\n              Our Journey\n            </h2>\n            <div className=\"relative max-w-4xl mx-auto\">\n              <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-border hidden md:block\"></div>\n              \n              <div className=\"space-y-12\">\n                {timeline.map((item, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, x: -50 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                    className=\"timeline-item relative pl-0 md:pl-24\"\n                  >\n                    <div className=\"absolute left-0 top-0 w-16 h-16 rounded-full bg-gradient-to-br from-primary to-secondary flex items-center justify-center font-bold text-white hidden md:flex\">\n                      {item.year}\n                    </div>\n                    <div className=\"glass-strong rounded-xl p-8\">\n                      <div className=\"md:hidden text-primary font-bold mb-2\">{item.year}</div>\n                      <h3 className=\"text-2xl font-semibold mb-3\">{item.title}</h3>\n                      <p className=\"text-muted-foreground text-lg\">{item.description}</p>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Values */}\n          <section className=\"mb-32\">\n            <h2 className=\"text-3xl font-serif font-bold mb-12 text-center\">\n              Our Values\n            </h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n              {values.map((value, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  className=\"glass-strong rounded-xl p-6 text-center hover:bg-white/10 transition-colors\"\n                >\n                  <div className=\"w-16 h-16 rounded-xl bg-gradient-to-br from-primary to-secondary flex items-center justify-center mx-auto mb-4\">\n                    <svg\n                      className=\"w-8 h-8 text-white\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d={value.icon}\n                      />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-xl font-semibold mb-3\">{value.title}</h3>\n                  <p className=\"text-muted-foreground text-sm\">{value.description}</p>\n                </motion.div>\n              ))}\n            </div>\n          </section>\n\n          {/* Team */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-12 text-center\">\n              Meet Our Team\n            </h2>\n            <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {teamMembers.map((member, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  onClick={() => setSelectedMember(member)}\n                  className=\"team-card group glass-strong rounded-xl overflow-hidden cursor-pointer hover:bg-white/10 transition-all hover:-translate-y-2\"\n                  data-testid={`card-team-${member.name.toLowerCase().replace(' ', '-')}`}\n                >\n                  <div className=\"relative h-80 overflow-hidden\">\n                    <img\n                      src={member.headshot}\n                      alt={member.name}\n                      className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-background via-background/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity\"></div>\n                  </div>\n                  <div className=\"p-6\">\n                    <h3 className=\"text-xl font-semibold mb-1\">{member.name}</h3>\n                    <p className=\"text-primary font-medium mb-4\">{member.role}</p>\n                    <div className=\"flex gap-3 opacity-0 group-hover:opacity-100 transition-opacity\">\n                      {member.socials.map((social, idx) => (\n                        <a\n                          key={idx}\n                          href={social.url}\n                          onClick={(e) => e.stopPropagation()}\n                          className=\"w-8 h-8 rounded-full glass flex items-center justify-center hover:bg-primary hover:text-primary-foreground transition-colors\"\n                          aria-label={social.platform}\n                        >\n                          {social.platform === \"LinkedIn\" && <Linkedin className=\"w-4 h-4\" />}\n                          {social.platform === \"Twitter\" && <Twitter className=\"w-4 h-4\" />}\n                        </a>\n                      ))}\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </section>\n\n          {/* CTA */}\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            className=\"glass-strong rounded-2xl p-12 text-center\"\n          >\n            <h2 className=\"text-3xl font-serif font-bold mb-4\">Join Our Mission</h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              We're always looking for talented individuals who share our passion for\n              building intelligent systems that make a real difference.\n            </p>\n            <a\n              href=\"/contact\"\n              className=\"inline-flex items-center gap-2 px-8 py-4 bg-primary text-primary-foreground rounded-lg font-semibold text-lg hover:bg-primary/90 transition-all hover:scale-105\"\n            >\n              Get in Touch\n            </a>\n          </motion.section>\n        </div>\n      </main>\n\n      {/* Team Member Modal */}\n      <Dialog open={!!selectedMember} onOpenChange={() => setSelectedMember(null)}>\n        <DialogContent className=\"glass-strong max-w-2xl border-border\">\n          {selectedMember && (\n            <div>\n              <div className=\"flex items-start gap-6 mb-6\">\n                <img\n                  src={selectedMember.headshot}\n                  alt={selectedMember.name}\n                  className=\"w-32 h-32 rounded-xl object-cover\"\n                />\n                <div>\n                  <h3 className=\"text-2xl font-serif font-bold mb-2\">\n                    {selectedMember.name}\n                  </h3>\n                  <p className=\"text-primary font-semibold mb-4\">{selectedMember.role}</p>\n                  <div className=\"flex gap-3\">\n                    {selectedMember.socials.map((social, idx) => (\n                      <a\n                        key={idx}\n                        href={social.url}\n                        className=\"w-10 h-10 rounded-full glass flex items-center justify-center hover:bg-primary hover:text-primary-foreground transition-colors\"\n                        aria-label={social.platform}\n                      >\n                        {social.platform === \"LinkedIn\" && <Linkedin className=\"w-5 h-5\" />}\n                        {social.platform === \"Twitter\" && <Twitter className=\"w-5 h-5\" />}\n                      </a>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <p className=\"text-muted-foreground leading-relaxed\">{selectedMember.bio}</p>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":13173},"client/src/pages/contact.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Mail, Phone, MapPin, Check, Clock } from \"lucide-react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  company: z.string().min(2, \"Company name is required\"),\n  projectType: z.string().min(1, \"Please select a project type\"),\n  budget: z.string().min(1, \"Please select a budget range\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n});\n\ntype ContactFormValues = z.infer<typeof contactFormSchema>;\n\nexport default function Contact() {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<ContactFormValues>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      company: \"\",\n      projectType: \"\",\n      budget: \"\",\n      message: \"\",\n    },\n  });\n\n  const onSubmit = async (data: ContactFormValues) => {\n    try {\n      // In a real implementation, this would send to your API\n      console.log(\"Form submitted:\", data);\n      \n      setIsSubmitted(true);\n      toast({\n        title: \"Message Sent!\",\n        description: \"We'll get back to you within 24 hours.\",\n      });\n      \n      form.reset();\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to send message. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-center mb-16\"\n          >\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-bold mb-6\">\n              Let's Build Together\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Ready to transform your vision into reality? Get in touch with our team of\n              experts.\n            </p>\n          </motion.div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 mb-20\">\n            {/* Video Section */}\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              <div className=\"relative rounded-2xl overflow-hidden glass-strong h-[500px]\">\n                <video\n                  id=\"contact-video\"\n                  autoPlay\n                  loop\n                  muted\n                  playsInline\n                  className=\"w-full h-full object-cover\"\n                  poster=\"https://images.unsplash.com/photo-1677442136019-21780ecad995?w=1200&h=800&fit=crop\"\n                >\n                  <source\n                    src=\"https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ForBiggerBlazes.mp4\"\n                    type=\"video/mp4\"\n                  />\n                </video>\n                <div className=\"absolute bottom-4 right-4\">\n                  <button\n                    onClick={() => {\n                      const video = document.getElementById('contact-video') as HTMLVideoElement;\n                      if (video) {\n                        if (video.paused) {\n                          video.play();\n                        } else {\n                          video.pause();\n                        }\n                      }\n                    }}\n                    className=\"px-4 py-2 glass-strong rounded-lg hover:bg-white/10 transition-colors text-sm font-medium\"\n                    aria-label=\"Play/Pause video\"\n                    data-testid=\"button-video-control\"\n                  >\n                    Play/Pause\n                  </button>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Contact Form */}\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.3 }}\n              className=\"glass-strong rounded-2xl p-8\"\n            >\n              {isSubmitted ? (\n                <div className=\"text-center py-12\">\n                  <div className=\"w-20 h-20 rounded-full bg-primary/20 flex items-center justify-center mx-auto mb-6\">\n                    <Check className=\"w-10 h-10 text-primary\" />\n                  </div>\n                  <h2 className=\"text-3xl font-serif font-bold mb-4\">Thank You!</h2>\n                  <p className=\"text-lg text-muted-foreground mb-8\">\n                    We've received your message and will get back to you within 24 hours.\n                  </p>\n                  <button\n                    onClick={() => setIsSubmitted(false)}\n                    className=\"px-6 py-3 bg-primary text-primary-foreground rounded-lg font-semibold hover:bg-primary/90 transition-colors\"\n                  >\n                    Send Another Message\n                  </button>\n                </div>\n              ) : (\n                <Form {...form}>\n                  <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Name</FormLabel>\n                          <FormControl>\n                            <Input\n                              placeholder=\"John Doe\"\n                              {...field}\n                              className=\"glass border-border\"\n                              data-testid=\"input-name\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Email</FormLabel>\n                          <FormControl>\n                            <Input\n                              type=\"email\"\n                              placeholder=\"john@example.com\"\n                              {...field}\n                              className=\"glass border-border\"\n                              data-testid=\"input-email\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"company\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Company</FormLabel>\n                          <FormControl>\n                            <Input\n                              placeholder=\"Acme Inc.\"\n                              {...field}\n                              className=\"glass border-border\"\n                              data-testid=\"input-company\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"projectType\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Project Type</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger className=\"glass border-border\" data-testid=\"select-project-type\">\n                                <SelectValue placeholder=\"Select project type\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"ai-mvp\">AI MVP Development</SelectItem>\n                              <SelectItem value=\"vr-ar\">VR/AR Experience</SelectItem>\n                              <SelectItem value=\"automation\">Custom Automation</SelectItem>\n                              <SelectItem value=\"consulting\">Consulting</SelectItem>\n                              <SelectItem value=\"other\">Other</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"budget\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Budget Range</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger className=\"glass border-border\" data-testid=\"select-budget\">\n                                <SelectValue placeholder=\"Select budget range\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"<50k\">Less than $50K</SelectItem>\n                              <SelectItem value=\"50k-100k\">$50K - $100K</SelectItem>\n                              <SelectItem value=\"100k-250k\">$100K - $250K</SelectItem>\n                              <SelectItem value=\">250k\">More than $250K</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <FormField\n                      control={form.control}\n                      name=\"message\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Message</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              placeholder=\"Tell us about your project...\"\n                              className=\"glass border-border min-h-[120px]\"\n                              {...field}\n                              data-testid=\"input-message\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    <button\n                      type=\"submit\"\n                      disabled={form.formState.isSubmitting}\n                      className=\"w-full px-6 py-3 bg-primary text-primary-foreground rounded-lg font-semibold hover:bg-primary/90 transition-all hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      data-testid=\"button-submit\"\n                    >\n                      {form.formState.isSubmitting ? \"Sending...\" : \"Send Message\"}\n                    </button>\n                  </form>\n                </Form>\n              )}\n            </motion.div>\n          </div>\n\n          {/* Company Details */}\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              className=\"glass-strong rounded-xl p-6\"\n            >\n              <Mail className=\"w-10 h-10 text-primary mb-4\" />\n              <h3 className=\"font-semibold mb-2\">Email</h3>\n              <a\n                href=\"mailto:hello@phenai.com\"\n                className=\"text-muted-foreground hover:text-primary transition-colors\"\n              >\n                hello@phenai.com\n              </a>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 }}\n              viewport={{ once: true }}\n              className=\"glass-strong rounded-xl p-6\"\n            >\n              <Phone className=\"w-10 h-10 text-primary mb-4\" />\n              <h3 className=\"font-semibold mb-2\">Phone</h3>\n              <a\n                href=\"tel:+1234567890\"\n                className=\"text-muted-foreground hover:text-primary transition-colors\"\n              >\n                +1 (234) 567-890\n              </a>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2 }}\n              viewport={{ once: true }}\n              className=\"glass-strong rounded-xl p-6\"\n            >\n              <MapPin className=\"w-10 h-10 text-primary mb-4\" />\n              <h3 className=\"font-semibold mb-2\">Address</h3>\n              <p className=\"text-muted-foreground\">\n                123 Innovation Drive\n                <br />\n                San Francisco, CA 94102\n              </p>\n            </motion.div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n              viewport={{ once: true }}\n              className=\"glass-strong rounded-xl p-6\"\n            >\n              <Clock className=\"w-10 h-10 text-primary mb-4\" />\n              <h3 className=\"font-semibold mb-2\">Business Hours</h3>\n              <p className=\"text-muted-foreground\">\n                Mon - Fri: 9AM - 6PM PST\n                <br />\n                Weekend: By Appointment\n              </p>\n            </motion.div>\n          </div>\n\n          {/* Map */}\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            className=\"rounded-2xl overflow-hidden h-[400px]\"\n          >\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3153.019301092296!2d-122.41941508468194!3d37.77492977975903!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8085809c6c8f4459%3A0xb10ed6d9b5050fa5!2sSan%20Francisco%2C%20CA%2094102!5e0!3m2!1sen!2sus!4v1234567890123!5m2!1sen!2sus\"\n              width=\"100%\"\n              height=\"100%\"\n              style={{ border: 0 }}\n              allowFullScreen\n              loading=\"lazy\"\n              referrerPolicy=\"no-referrer-when-downgrade\"\n              title=\"Phen AI Office Location\"\n            ></iframe>\n          </motion.div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":15666},"client/src/pages/landing.tsx":{"content":"import { useRef, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport HeroGallery from \"@/components/landing/hero-gallery\";\nimport GapReveal from \"@/components/landing/gap-reveal\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\nimport { services, industries } from \"@/lib/content\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nexport default function Landing() {\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  useGSAP(() => {\n    if (!window.gsap) return;\n\n    // Stagger service cards\n    window.gsap.from(\".service-card\", {\n      opacity: 0,\n      y: 50,\n      stagger: 0.2,\n      scrollTrigger: {\n        trigger: \".service-card\",\n        start: \"top 80%\",\n      },\n    });\n\n    // Stagger innovation cards\n    window.gsap.from(\".innovation-card\", {\n      opacity: 0,\n      y: 50,\n      stagger: 0.15,\n      scrollTrigger: {\n        trigger: \".innovation-card\",\n        start: \"top 80%\",\n      },\n    });\n  }, []);\n\n  const scrollSlider = (direction: \"left\" | \"right\") => {\n    if (!sliderRef.current) return;\n    const scrollAmount = direction === \"left\" ? -420 : 420;\n    sliderRef.current.scrollBy({ left: scrollAmount, behavior: \"smooth\" });\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      {/* Hero Section */}\n      <section className=\"relative min-h-screen flex items-center justify-center pt-20 overflow-hidden\">\n        {/* Background particles */}\n        <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n          <div className=\"particle\" style={{ left: \"10%\", top: \"20%\", animationDelay: \"0s\" }}></div>\n          <div className=\"particle\" style={{ left: \"80%\", top: \"30%\", animationDelay: \"2s\" }}></div>\n          <div className=\"particle\" style={{ left: \"30%\", top: \"70%\", animationDelay: \"4s\" }}></div>\n          <div className=\"particle\" style={{ left: \"70%\", top: \"60%\", animationDelay: \"6s\" }}></div>\n        </div>\n\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full\">\n          <div className=\"text-center\">\n            <HeroGallery />\n          </div>\n        </div>\n      </section>\n\n      {/* Vision Section */}\n      <section className=\"relative py-32 overflow-hidden\">\n        <div className=\"absolute inset-0 opacity-20\">\n          <img\n            src=\"https://images.unsplash.com/photo-1639762681485-074b7f938ba0?w=1920&h=1080&fit=crop\"\n            alt=\"Abstract technology pattern\"\n            className=\"w-full h-full object-cover\"\n          />\n        </div>\n        <div className=\"relative max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.h2\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-3xl sm:text-4xl lg:text-5xl font-serif font-semibold leading-relaxed mb-4\"\n          >\n            We design intelligence you can trust—\n            <br />\n            elegant systems that deliver measurable value.\n          </motion.h2>\n          <motion.p\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            viewport={{ once: true }}\n            className=\"text-xl text-muted-foreground\"\n          >\n            Not just an AI company—your engineering partner for lasting impact.\n          </motion.p>\n        </div>\n      </section>\n\n      {/* Gap Reveal */}\n      <GapReveal />\n\n      {/* Services Section */}\n      <section className=\"py-24 bg-gradient-to-b from-background to-muted/20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl lg:text-5xl font-serif font-bold mb-4\">\n              Our Services\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Comprehensive solutions tailored to transform your vision into reality\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <Link key={service.slug} href={`/technology/services/${service.slug}`}>\n                <a>\n                  <div\n                    className=\"service-card group glass-strong rounded-2xl p-8 hover:bg-white/10 transition-all duration-300 hover:-translate-y-2 cursor-pointer\"\n                    data-testid={`card-service-${service.slug}`}\n                  >\n                    <div\n                      className={`w-16 h-16 rounded-xl ${\n                        index % 2 === 0 ? \"bg-primary/20\" : \"bg-secondary/20\"\n                      } flex items-center justify-center mb-6 group-hover:scale-110 transition-transform`}\n                    >\n                      <svg\n                        className={`w-8 h-8 ${\n                          index % 2 === 0 ? \"text-primary\" : \"text-secondary\"\n                        }`}\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d={service.icon}\n                        />\n                      </svg>\n                    </div>\n                    <h3 className=\"text-2xl font-serif font-semibold mb-4\">{service.title}</h3>\n                    <p className=\"text-muted-foreground mb-6\">{service.summary}</p>\n                    <span\n                      className={`inline-flex items-center ${\n                        index % 2 === 0 ? \"text-primary\" : \"text-secondary\"\n                      } font-medium group-hover:gap-2 transition-all`}\n                    >\n                      Learn More\n                      <svg\n                        className=\"w-5 h-5 ml-1 group-hover:translate-x-1 transition-transform\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M9 5l7 7-7 7\"\n                        />\n                      </svg>\n                    </span>\n                  </div>\n                </a>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Industries Slider */}\n      <section className=\"py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl lg:text-5xl font-serif font-bold mb-4\">\n              Industries We Serve\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Transforming sectors through intelligent innovation\n            </p>\n          </div>\n\n          <div className=\"relative\">\n            <div\n              ref={sliderRef}\n              className=\"flex gap-6 overflow-x-auto snap-x snap-mandatory scrollbar-hide pb-8\"\n              style={{ scrollBehavior: \"smooth\" }}\n            >\n              {industries.map((industry) => (\n                <Link key={industry.slug} href={`/industries/${industry.slug}`}>\n                  <a>\n                    <div\n                      className=\"industry-slide min-w-[320px] sm:min-w-[400px] snap-center group cursor-pointer\"\n                      data-testid={`card-industry-${industry.slug}`}\n                    >\n                      <div className=\"relative h-96 rounded-2xl overflow-hidden glass-strong\">\n                        <img\n                          src={industry.heroImage}\n                          alt={industry.title}\n                          className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-700\"\n                        />\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-background via-background/50 to-transparent\"></div>\n                        <div className=\"absolute bottom-0 left-0 right-0 p-8\">\n                          <h3 className=\"text-2xl font-serif font-bold mb-2\">\n                            {industry.title}\n                          </h3>\n                          <p className=\"text-muted-foreground mb-4\">{industry.tagline}</p>\n                          <span className=\"inline-flex items-center text-primary font-medium opacity-0 group-hover:opacity-100 transition-opacity\">\n                            View Industry\n                            <svg\n                              className=\"w-5 h-5 ml-1\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              viewBox=\"0 0 24 24\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M9 5l7 7-7 7\"\n                              />\n                            </svg>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </a>\n                </Link>\n              ))}\n            </div>\n\n            {/* Slider Controls */}\n            <button\n              onClick={() => scrollSlider(\"left\")}\n              className=\"absolute top-1/2 -translate-y-1/2 left-0 w-12 h-12 rounded-full glass-strong flex items-center justify-center hover:bg-white/10 transition-colors focus:outline-none focus:ring-2 focus:ring-ring\"\n              aria-label=\"Previous slide\"\n              data-testid=\"button-slider-prev\"\n            >\n              <ChevronLeft className=\"w-6 h-6\" />\n            </button>\n            <button\n              onClick={() => scrollSlider(\"right\")}\n              className=\"absolute top-1/2 -translate-y-1/2 right-0 w-12 h-12 rounded-full glass-strong flex items-center justify-center hover:bg-white/10 transition-colors focus:outline-none focus:ring-ring\"\n              aria-label=\"Next slide\"\n              data-testid=\"button-slider-next\"\n            >\n              <ChevronRight className=\"w-6 h-6\" />\n            </button>\n          </div>\n        </div>\n      </section>\n\n      {/* Innovation Areas */}\n      <section className=\"py-24 bg-gradient-to-b from-muted/20 to-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl lg:text-5xl font-serif font-bold mb-4\">\n              Innovation Areas\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Pioneering solutions at the intersection of AI, immersive tech, and industry\n              expertise\n            </p>\n          </div>\n\n          <div className=\"grid sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                title: \"PEBC OSPE VR AI Prep\",\n                desc: \"Immersive VR training platform for pharmacy professionals preparing for board certification exams.\",\n                gradient: \"from-primary to-secondary\",\n              },\n              {\n                title: \"Computer-Vision Disease Detection\",\n                desc: \"AI-powered crop monitoring system for early disease detection and yield optimization in agriculture.\",\n                gradient: \"from-secondary to-primary\",\n              },\n              {\n                title: \"Confidential On-Prem Analytics\",\n                desc: \"Secure, on-premise AI solutions for regulated industries requiring strict data privacy compliance.\",\n                gradient: \"from-primary to-secondary\",\n              },\n              {\n                title: \"Predictive Supply Chain Intelligence\",\n                desc: \"Machine learning models that forecast demand, optimize inventory, and reduce operational costs.\",\n                gradient: \"from-secondary to-primary\",\n              },\n              {\n                title: \"Immersive Team Training\",\n                desc: \"Collaborative VR environments for enterprise training, simulations, and skill development.\",\n                gradient: \"from-primary to-secondary\",\n              },\n              {\n                title: \"Smart Energy Management\",\n                desc: \"AI-driven optimization for renewable energy grids, maximizing efficiency and reducing waste.\",\n                gradient: \"from-secondary to-primary\",\n              },\n            ].map((innovation, index) => (\n              <div\n                key={index}\n                className=\"innovation-card glass-strong rounded-2xl p-8 hover:bg-white/10 transition-all duration-300 group cursor-pointer\"\n              >\n                <div\n                  className={`w-16 h-16 rounded-xl bg-gradient-to-br ${innovation.gradient} flex items-center justify-center mb-6 group-hover:scale-110 transition-transform`}\n                >\n                  <svg\n                    className=\"w-8 h-8 text-white\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M13 10V3L4 14h7v7l9-11h-7z\"\n                    />\n                  </svg>\n                </div>\n                <h3 className=\"text-xl font-serif font-semibold mb-3\">{innovation.title}</h3>\n                <p className=\"text-muted-foreground mb-4\">{innovation.desc}</p>\n                <span className=\"inline-flex items-center text-primary font-medium group-hover:gap-2 transition-all\">\n                  Explore\n                  <svg\n                    className=\"w-5 h-5 ml-1 group-hover:translate-x-1 transition-transform\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M9 5l7 7-7 7\"\n                    />\n                  </svg>\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Final CTA */}\n      <section className=\"py-24 relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute inset-0 bg-gradient-to-br from-primary/10 to-secondary/10\"></div>\n          <div\n            className=\"particle\"\n            style={{ left: \"20%\", top: \"30%\", animationDelay: \"1s\" }}\n          ></div>\n          <div\n            className=\"particle\"\n            style={{ left: \"70%\", top: \"60%\", animationDelay: \"3s\" }}\n          ></div>\n          <div\n            className=\"particle\"\n            style={{ left: \"40%\", top: \"80%\", animationDelay: \"5s\" }}\n          ></div>\n        </div>\n\n        <div className=\"relative max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-bold mb-6\">\n            Let's Build Something Phenomenal\n          </h2>\n          <p className=\"text-xl text-muted-foreground mb-10 max-w-3xl mx-auto\">\n            Transform your vision into reality with AI-powered solutions designed for lasting\n            impact\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/contact\">\n              <a\n                className=\"px-10 py-4 bg-primary text-primary-foreground rounded-lg font-semibold text-lg hover:bg-primary/90 transition-all hover:scale-105 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-background\"\n                data-testid=\"button-start-project\"\n              >\n                Start Your Project\n              </a>\n            </Link>\n            <Link href=\"/about\">\n              <a\n                className=\"px-10 py-4 glass-strong border border-border text-foreground rounded-lg font-semibold text-lg hover:bg-white/10 transition-all hover:scale-105 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-background\"\n                data-testid=\"button-learn-about\"\n              >\n                Learn About Us\n              </a>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":16925},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/landing/gap-reveal.tsx":{"content":"import { useRef, useEffect } from \"react\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\n\nexport default function GapReveal() {\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const bgRef = useRef<HTMLDivElement>(null);\n  const textRef = useRef<HTMLDivElement>(null);\n\n  useGSAP(() => {\n    if (!window.gsap || !sectionRef.current || !bgRef.current || !textRef.current) return;\n\n    window.gsap.to(bgRef.current, {\n      width: \"100%\",\n      scrollTrigger: {\n        trigger: sectionRef.current,\n        start: \"top center\",\n        end: \"bottom center\",\n        scrub: 1,\n      },\n    });\n\n    window.gsap.to(textRef.current, {\n      opacity: 1,\n      scrollTrigger: {\n        trigger: sectionRef.current,\n        start: \"top center\",\n        end: \"center center\",\n        scrub: 1,\n      },\n    });\n  }, []);\n\n  return (\n    <section className=\"relative py-24\">\n      <div\n        ref={sectionRef}\n        className=\"gap-reveal max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\"\n      >\n        <div className=\"text-center relative z-10\">\n          <h2 className=\"text-5xl sm:text-6xl lg:text-7xl font-serif font-bold\">\n            We are <span className=\"inline-block mx-4\">(</span>\n            <span className=\"inline-block mx-4\">)</span> Phen AI\n          </h2>\n        </div>\n        <div\n          ref={bgRef}\n          className=\"gap-reveal-bg\"\n          style={{\n            backgroundImage:\n              \"url('https://images.unsplash.com/photo-1451187580459-43490279c0fa?w=1920&h=1080&fit=crop')\",\n          }}\n        ></div>\n        <div\n          ref={textRef}\n          className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 opacity-0 text-4xl font-serif font-semibold text-white z-20 whitespace-nowrap\"\n        >\n          Not just an AI company\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1830},"client/src/components/landing/hero-gallery.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { checkReducedMotion } from \"@/lib/gsap-utils\";\n\nconst heroTexts = [\n  \"AI, engineered for impact.\",\n  \"VR/AR that teaches and persuades.\",\n  \"On-prem intelligence for regulated industries.\",\n  \"Confident AI. Practical outcomes.\",\n  \"Vision systems that see what matters.\",\n  \"Data pipelines that scale with you.\",\n];\n\nconst galleryImages = [\n  {\n    front: \"https://images.unsplash.com/photo-1677442136019-21780ecad995?w=400&h=500&fit=crop\",\n    back: \"AI & Machine Learning\",\n  },\n  {\n    front: \"https://images.unsplash.com/photo-1617802690658-1173a812650d?w=400&h=500&fit=crop\",\n    back: \"VR/AR Experiences\",\n  },\n  {\n    front: \"https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=400&h=500&fit=crop\",\n    back: \"Data Engineering\",\n  },\n  {\n    front: \"https://images.unsplash.com/photo-1535378917042-10a22c95931a?w=400&h=500&fit=crop\",\n    back: \"Computer Vision\",\n  },\n  {\n    front: \"https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=400&h=500&fit=crop\",\n    back: \"On-Prem AI Solutions\",\n  },\n  {\n    front: \"https://images.unsplash.com/photo-1518432031352-d6fc5c10da5a?w=400&h=500&fit=crop\",\n    back: \"Custom Automation\",\n  },\n];\n\nexport default function HeroGallery() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [flippedCard, setFlippedCard] = useState<number | null>(null);\n  const reducedMotion = checkReducedMotion();\n\n  useEffect(() => {\n    if (reducedMotion) return;\n\n    const interval = setInterval(() => {\n      setFlippedCard(currentIndex);\n      setTimeout(() => {\n        setCurrentIndex((prev) => (prev + 1) % heroTexts.length);\n        setFlippedCard(null);\n      }, 800);\n    }, 4000);\n\n    return () => clearInterval(interval);\n  }, [currentIndex, reducedMotion]);\n\n  const positions = [\n    { rotate: 0, translateY: -280 },\n    { rotate: 60, translateY: -280 },\n    { rotate: 120, translateY: -280 },\n    { rotate: 180, translateY: -280 },\n    { rotate: 240, translateY: -280 },\n    { rotate: 300, translateY: -280 },\n  ];\n\n  return (\n    <div className=\"relative w-full max-w-4xl mx-auto mb-16\" style={{ height: \"600px\" }}>\n      {/* Center Text */}\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10 text-center max-w-lg px-4\">\n        <AnimatePresence mode=\"wait\">\n          <motion.h1\n            key={currentIndex}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n            className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-bold leading-tight mb-6\"\n          >\n            {heroTexts[currentIndex]}\n          </motion.h1>\n        </AnimatePresence>\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n          <a\n            href=\"/contact\"\n            className=\"px-8 py-3.5 bg-primary text-primary-foreground rounded-lg font-semibold hover:bg-primary/90 transition-all hover:scale-105 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-background\"\n            data-testid=\"button-schedule-consultation\"\n          >\n            Schedule a Consultation\n          </a>\n          <a\n            href=\"/industries\"\n            className=\"px-8 py-3.5 glass border border-border text-foreground rounded-lg font-semibold hover:bg-white/10 transition-all hover:scale-105 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-background\"\n            data-testid=\"button-explore-work\"\n          >\n            Explore Our Work\n          </a>\n        </div>\n      </div>\n\n      {/* Orbiting Cards */}\n      <div className=\"relative w-full h-full\">\n        {galleryImages.map((image, index) => {\n          const pos = positions[index];\n          return (\n            <div\n              key={index}\n              className=\"flip-card absolute\"\n              style={{\n                width: \"180px\",\n                height: \"240px\",\n                top: \"50%\",\n                left: \"50%\",\n                marginLeft: \"-90px\",\n                marginTop: \"-120px\",\n                transform: `rotate(${pos.rotate}deg) translateY(${pos.translateY}px) rotate(-${pos.rotate}deg)`,\n              }}\n            >\n              <div\n                className={`flip-card-inner ${\n                  flippedCard === index ? \"transform rotateY-180\" : \"\"\n                }`}\n                style={{\n                  transform: flippedCard === index ? \"rotateY(180deg)\" : \"rotateY(0deg)\",\n                }}\n              >\n                <div className=\"flip-card-front glass-strong\">\n                  <img\n                    src={image.front}\n                    alt={`Gallery ${index + 1}`}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n                <div className=\"flip-card-back glass-strong flex items-center justify-center p-4\">\n                  <p className=\"text-sm font-medium text-center\">{image.back}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Pagination Dots */}\n      <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 flex gap-2\">\n        {heroTexts.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => setCurrentIndex(index)}\n            className={`w-2 h-2 rounded-full transition-colors ${\n              index === currentIndex ? \"bg-primary\" : \"bg-muted\"\n            }`}\n            aria-label={`Slide ${index + 1}`}\n            data-testid={`dot-slide-${index + 1}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","size_bytes":5764},"client/src/components/layout/footer.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Mail, Phone, MapPin, Linkedin, Twitter, Github } from \"lucide-react\";\n\nexport default function Footer() {\n  const [currentYear, setCurrentYear] = useState(2024);\n\n  useEffect(() => {\n    setCurrentYear(new Date().getFullYear());\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <footer className=\"border-t border-border bg-card/50 backdrop-blur-sm\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n        <div className=\"grid md:grid-cols-3 gap-12 mb-12\">\n          {/* Brand Column */}\n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <div className=\"w-10 h-10 rounded-lg bg-primary flex items-center justify-center\">\n                <svg\n                  className=\"w-6 h-6 text-primary-foreground\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M13 10V3L4 14h7v7l9-11h-7z\"\n                  />\n                </svg>\n              </div>\n              <span className=\"text-xl font-serif font-semibold\">Phen AI</span>\n            </div>\n            <p className=\"text-muted-foreground\">\n              Engineering intelligence you can trust. Delivering elegant systems\n              with measurable impact.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-semibold text-lg mb-4\">Quick Links</h3>\n            <ul className=\"space-y-3\">\n              <li>\n                <Link href=\"/\">\n                  <a className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                    Home\n                  </a>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/industries\">\n                  <a className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                    Industries\n                  </a>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/technology\">\n                  <a className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                    Technology\n                  </a>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/about\">\n                  <a className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                    About\n                  </a>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/blog\">\n                  <a className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                    Blog\n                  </a>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/contact\">\n                  <a className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                    Contact\n                  </a>\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Contact Details */}\n          <div>\n            <h3 className=\"font-semibold text-lg mb-4\">Get in Touch</h3>\n            <ul className=\"space-y-3\">\n              <li>\n                <a\n                  href=\"mailto:hello@phenai.com\"\n                  className=\"text-muted-foreground hover:text-foreground transition-colors flex items-center gap-2\"\n                >\n                  <Mail className=\"w-5 h-5\" />\n                  hello@phenai.com\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"tel:+1234567890\"\n                  className=\"text-muted-foreground hover:text-foreground transition-colors flex items-center gap-2\"\n                >\n                  <Phone className=\"w-5 h-5\" />\n                  +1 (234) 567-890\n                </a>\n              </li>\n              <li className=\"text-muted-foreground flex items-start gap-2\">\n                <MapPin className=\"w-5 h-5 mt-0.5\" />\n                <span>\n                  123 Innovation Drive\n                  <br />\n                  San Francisco, CA 94102\n                </span>\n              </li>\n            </ul>\n\n            <div className=\"flex gap-4 mt-6\">\n              <a\n                href=\"#\"\n                className=\"w-10 h-10 rounded-full glass flex items-center justify-center hover:bg-primary hover:text-primary-foreground transition-colors\"\n                aria-label=\"LinkedIn\"\n              >\n                <Linkedin className=\"w-5 h-5\" />\n              </a>\n              <a\n                href=\"#\"\n                className=\"w-10 h-10 rounded-full glass flex items-center justify-center hover:bg-primary hover:text-primary-foreground transition-colors\"\n                aria-label=\"Twitter\"\n              >\n                <Twitter className=\"w-5 h-5\" />\n              </a>\n              <a\n                href=\"#\"\n                className=\"w-10 h-10 rounded-full glass flex items-center justify-center hover:bg-primary hover:text-primary-foreground transition-colors\"\n                aria-label=\"GitHub\"\n              >\n                <Github className=\"w-5 h-5\" />\n              </a>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-border pt-8 flex flex-col sm:flex-row justify-between items-center gap-4\">\n          <p className=\"text-muted-foreground text-sm\">\n            © {currentYear} Phen AI. All rights reserved.\n          </p>\n          <button\n            onClick={scrollToTop}\n            className=\"px-4 py-2 glass rounded-lg text-sm font-medium hover:bg-white/10 transition-all hover:scale-105 focus:outline-none focus:ring-2 focus:ring-ring\"\n            data-testid=\"button-scroll-top\"\n          >\n            Back to Top ↑\n          </button>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":6147},"client/src/components/layout/header.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X } from \"lucide-react\";\n\nexport default function Header() {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  useEffect(() => {\n    setIsMobileMenuOpen(false);\n  }, [location]);\n\n  const navItems = [\n    { label: \"Home\", href: \"/\" },\n    { label: \"Industries\", href: \"/industries\" },\n    { label: \"Technology\", href: \"/technology\" },\n    { label: \"About\", href: \"/about\" },\n    { label: \"Blog\", href: \"/blog\" },\n  ];\n\n  return (\n    <header\n      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n        isScrolled ? \"glass-strong border-b border-border\" : \"\"\n      }`}\n    >\n      <nav className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-20\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-3 cursor-pointer\">\n            <div className=\"w-10 h-10 rounded-lg bg-primary flex items-center justify-center\">\n              <svg\n                className=\"w-6 h-6 text-primary-foreground\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M13 10V3L4 14h7v7l9-11h-7z\"\n                />\n              </svg>\n            </div>\n            <span className=\"text-xl font-serif font-semibold\">Phen AI</span>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden lg:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <Link \n                key={item.href} \n                href={item.href}\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors relative group\"\n                data-testid={`nav-${item.label.toLowerCase()}`}\n              >\n                {item.label}\n                <span className=\"absolute bottom-0 left-0 w-0 h-0.5 bg-primary group-hover:w-full transition-all duration-300\"></span>\n              </Link>\n            ))}\n            <Link \n              href=\"/contact\"\n              className=\"px-6 py-2.5 bg-primary text-primary-foreground rounded-lg font-medium text-sm hover:bg-primary/90 transition-all hover:scale-105 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-background\"\n              data-testid=\"button-contact\"\n            >\n              Contact Us\n            </Link>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            className=\"lg:hidden p-2 rounded-lg hover:bg-muted transition-colors focus:outline-none focus:ring-2 focus:ring-ring\"\n            aria-label=\"Toggle menu\"\n            data-testid=\"button-mobile-menu\"\n          >\n            {isMobileMenuOpen ? (\n              <X className=\"w-6 h-6\" />\n            ) : (\n              <Menu className=\"w-6 h-6\" />\n            )}\n          </button>\n        </div>\n      </nav>\n\n      {/* Mobile Menu */}\n      <div\n        className={`mobile-menu lg:hidden glass-strong border-t border-border ${\n          isMobileMenuOpen ? \"open\" : \"\"\n        }`}\n      >\n        <div className=\"px-4 py-6 space-y-4\">\n          {navItems.map((item) => (\n            <Link \n              key={item.href} \n              href={item.href}\n              className=\"block px-4 py-2 text-sm font-medium hover:bg-muted rounded-lg transition-colors\"\n              data-testid={`mobile-nav-${item.label.toLowerCase()}`}\n            >\n              {item.label}\n            </Link>\n          ))}\n          <Link \n            href=\"/contact\"\n            className=\"block px-6 py-2.5 bg-primary text-primary-foreground rounded-lg font-medium text-sm text-center hover:bg-primary/90 transition-colors\"\n            data-testid=\"mobile-button-contact\"\n          >\n            Contact Us\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":4466},"client/src/components/technology/atom-visualization.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { X } from \"lucide-react\";\nimport { checkReducedMotion } from \"@/lib/gsap-utils\";\n\nconst techData = {\n  \"ai-ml\": {\n    title: \"AI & Machine Learning\",\n    content:\n      \"Advanced machine learning models and neural networks that power intelligent automation, predictive analytics, and natural language processing. Our AI solutions are designed for production environments with emphasis on accuracy, explainability, and ethical deployment.\",\n    link: \"/technology/ai-ml\",\n  },\n  \"data-engineering\": {\n    title: \"Data Engineering\",\n    content:\n      \"Scalable data pipelines and infrastructure that transform raw data into actionable insights. We build robust ETL processes, data lakes, and real-time streaming architectures that handle billions of events with reliability and performance.\",\n    link: \"/technology/data-engineering\",\n  },\n  \"vr-ar\": {\n    title: \"Virtual & Augmented Reality\",\n    content:\n      \"Immersive VR/AR experiences that revolutionize training, education, and customer engagement. From realistic simulations to interactive product visualizations, we create compelling experiences that drive real business outcomes.\",\n    link: \"/technology/vr-ar\",\n  },\n  \"computer-vision\": {\n    title: \"Computer Vision\",\n    content:\n      \"State-of-the-art visual recognition systems for object detection, image classification, and scene understanding. Our computer vision solutions power everything from quality control automation to advanced driver assistance systems.\",\n    link: \"/technology/computer-vision\",\n  },\n  \"on-prem-ai\": {\n    title: \"On-Premise AI Models\",\n    content:\n      \"Secure, on-premise AI deployments for regulated industries requiring strict data privacy and compliance. We deliver the power of cloud AI with the security of on-premise infrastructure, ensuring your sensitive data never leaves your environment.\",\n    link: \"/technology/on-prem-ai\",\n  },\n};\n\nconst particles = [\n  { id: \"ai-ml\", label: \"AI & ML\", duration: 20, delay: 0 },\n  { id: \"data-engineering\", label: \"Data Engineering\", duration: 25, delay: 0 },\n  { id: \"vr-ar\", label: \"VR/AR\", duration: 30, delay: 0 },\n  { id: \"computer-vision\", label: \"Computer Vision\", duration: 22, delay: 0 },\n  { id: \"on-prem-ai\", label: \"On-Prem AI\", duration: 28, delay: 0 },\n];\n\nexport default function AtomVisualization() {\n  const [selectedTech, setSelectedTech] = useState<string | null>(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const reducedMotion = checkReducedMotion();\n\n  useEffect(() => {\n    if (selectedTech) {\n      setIsPaused(true);\n    } else {\n      setIsPaused(false);\n    }\n  }, [selectedTech]);\n\n  const handleParticleClick = (techId: string) => {\n    setSelectedTech(techId);\n  };\n\n  const handleClose = () => {\n    setSelectedTech(null);\n  };\n\n  return (\n    <div className=\"relative flex items-center justify-center\" style={{ height: \"600px\" }}>\n      {/* Nucleus - Phen AI Logo */}\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 z-10\">\n        <div className=\"w-32 h-32 rounded-full glass-strong flex items-center justify-center animate-float\">\n          <div className=\"w-20 h-20 rounded-full bg-gradient-to-br from-primary to-secondary flex items-center justify-center\">\n            <svg\n              className=\"w-10 h-10 text-white\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M13 10V3L4 14h7v7l9-11h-7z\"\n              />\n            </svg>\n          </div>\n        </div>\n      </div>\n\n      {/* Orbiting Particles */}\n      <div className=\"relative w-full h-full\">\n        {particles.map((particle, index) => {\n          const angle = (index * 360) / particles.length;\n          return (\n            <div\n              key={particle.id}\n              className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\n            >\n              <motion.div\n                animate={\n                  !reducedMotion && !isPaused\n                    ? {\n                        rotate: 360,\n                      }\n                    : {}\n                }\n                transition={\n                  !reducedMotion && !isPaused\n                    ? {\n                        duration: particle.duration,\n                        repeat: Infinity,\n                        ease: \"linear\",\n                        delay: particle.delay,\n                      }\n                    : {}\n                }\n                style={{\n                  transform: `rotate(${angle}deg) translateX(250px) rotate(-${angle}deg)`,\n                }}\n              >\n                <button\n                  onClick={() => handleParticleClick(particle.id)}\n                  className=\"glass-strong px-6 py-3 rounded-full cursor-pointer hover:scale-110 transition-transform group focus:outline-none focus:ring-2 focus:ring-ring\"\n                  data-testid={`particle-${particle.id}`}\n                >\n                  <span className=\"text-sm font-semibold whitespace-nowrap\">\n                    {particle.label}\n                  </span>\n                </button>\n              </motion.div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Popover Panel */}\n      <AnimatePresence>\n        {selectedTech && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0.9 }}\n            className=\"absolute z-20 glass-strong rounded-2xl p-6 max-w-md\"\n            style={{ top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" }}\n          >\n            <h3 className=\"text-xl font-serif font-semibold mb-3\">\n              {techData[selectedTech as keyof typeof techData]?.title}\n            </h3>\n            <p className=\"text-muted-foreground mb-4\">\n              {techData[selectedTech as keyof typeof techData]?.content}\n            </p>\n            <a\n              href={techData[selectedTech as keyof typeof techData]?.link}\n              className=\"inline-flex items-center text-primary font-medium hover:gap-2 transition-all\"\n              data-testid={`link-learn-more-${selectedTech}`}\n            >\n              Learn More\n              <svg\n                className=\"w-5 h-5 ml-1\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M9 5l7 7-7 7\"\n                />\n              </svg>\n            </a>\n            <button\n              onClick={handleClose}\n              className=\"absolute top-4 right-4 p-1 hover:bg-white/10 rounded-lg transition-colors\"\n              data-testid=\"button-close-popover\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n","size_bytes":7246},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb-nav.tsx":{"content":"import { Link } from \"wouter\";\nimport { ChevronRight, Home } from \"lucide-react\";\n\ninterface BreadcrumbItem {\n  label: string;\n  href?: string;\n}\n\ninterface BreadcrumbNavProps {\n  items: BreadcrumbItem[];\n}\n\nexport default function BreadcrumbNav({ items }: BreadcrumbNavProps) {\n  return (\n    <nav aria-label=\"Breadcrumb\" className=\"mb-8\">\n      <ol className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n        <li>\n          <Link href=\"/\">\n            <a className=\"hover:text-foreground transition-colors flex items-center gap-1\">\n              <Home className=\"w-4 h-4\" />\n              Home\n            </a>\n          </Link>\n        </li>\n        {items.map((item, index) => (\n          <li key={index} className=\"flex items-center gap-2\">\n            <ChevronRight className=\"w-4 h-4\" />\n            {item.href ? (\n              <Link href={item.href}>\n                <a className=\"hover:text-foreground transition-colors\">{item.label}</a>\n              </Link>\n            ) : (\n              <span className=\"text-foreground font-medium\">{item.label}</span>\n            )}\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n}\n","size_bytes":1160},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/blog/[slug].tsx":{"content":"import { useRoute, Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Calendar, Clock, ArrowLeft, Share2, Tag } from \"lucide-react\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport BreadcrumbNav from \"@/components/ui/breadcrumb-nav\";\nimport { blogPosts } from \"@/lib/content\";\nimport NotFound from \"@/pages/not-found\";\n\nexport default function BlogPost() {\n  const [, params] = useRoute(\"/blog/:slug\");\n  const post = blogPosts.find((p) => p.slug === params?.slug);\n\n  if (!post) {\n    return <NotFound />;\n  }\n\n  const currentIndex = blogPosts.findIndex((p) => p.slug === post.slug);\n  const nextPost = currentIndex < blogPosts.length - 1 ? blogPosts[currentIndex + 1] : null;\n  const prevPost = currentIndex > 0 ? blogPosts[currentIndex - 1] : null;\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <article className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <BreadcrumbNav\n            items={[\n              { label: \"Blog\", href: \"/blog\" },\n              { label: post.title },\n            ]}\n          />\n\n          {/* Hero Image */}\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"relative h-[500px] rounded-2xl overflow-hidden mb-12\"\n          >\n            <img\n              src={post.heroImage}\n              alt={post.title}\n              className=\"w-full h-full object-cover\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-background via-transparent to-transparent\"></div>\n          </motion.div>\n\n          {/* Meta Info */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n            className=\"mb-8\"\n          >\n            <div className=\"flex flex-wrap items-center gap-6 text-muted-foreground mb-6\">\n              <span className=\"flex items-center gap-2\">\n                <Calendar className=\"w-5 h-5\" />\n                {new Date(post.date).toLocaleDateString(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"long\",\n                  day: \"numeric\",\n                })}\n              </span>\n              <span className=\"flex items-center gap-2\">\n                <Clock className=\"w-5 h-5\" />\n                {post.readingTime} min read\n              </span>\n              <span>By {post.author}</span>\n            </div>\n\n            <h1 className=\"text-4xl sm:text-5xl font-serif font-bold mb-6\">\n              {post.title}\n            </h1>\n\n            <p className=\"text-xl text-muted-foreground mb-6\">{post.summary}</p>\n\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-2\">\n                <Tag className=\"w-5 h-5 text-muted-foreground\" />\n                <div className=\"flex flex-wrap gap-2\">\n                  {post.tags.map((tag) => (\n                    <span\n                      key={tag}\n                      className=\"px-3 py-1 glass rounded-full text-sm font-medium\"\n                    >\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n              </div>\n              <button\n                onClick={() => navigator.share?.({ title: post.title, url: window.location.href })}\n                className=\"ml-auto p-2 glass rounded-lg hover:bg-white/10 transition-colors\"\n                aria-label=\"Share article\"\n              >\n                <Share2 className=\"w-5 h-5\" />\n              </button>\n            </div>\n          </motion.div>\n\n          {/* Content */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 }}\n            className=\"prose prose-invert prose-lg max-w-none mb-16\"\n          >\n            <div className=\"glass-strong rounded-xl p-8 mb-8\">\n              <p className=\"text-muted-foreground leading-relaxed\">\n                {post.content}\n              </p>\n              <p className=\"text-muted-foreground leading-relaxed mt-4\">\n                This article explores the transformative potential of emerging technologies\n                and their practical applications across industries. Our team continues to\n                research and develop innovative solutions that drive measurable business value.\n              </p>\n            </div>\n          </motion.div>\n\n          {/* Navigation */}\n          <div className=\"grid md:grid-cols-2 gap-6 mb-12\">\n            {prevPost && (\n              <Link href={`/blog/${prevPost.slug}`}>\n                <a className=\"glass-strong rounded-xl p-6 hover:bg-white/10 transition-colors group\">\n                  <div className=\"flex items-center gap-2 text-muted-foreground mb-3\">\n                    <ArrowLeft className=\"w-4 h-4\" />\n                    Previous Article\n                  </div>\n                  <h3 className=\"font-semibold group-hover:text-primary transition-colors\">\n                    {prevPost.title}\n                  </h3>\n                </a>\n              </Link>\n            )}\n            {nextPost && (\n              <Link href={`/blog/${nextPost.slug}`}>\n                <a className=\"glass-strong rounded-xl p-6 hover:bg-white/10 transition-colors group md:text-right\">\n                  <div className=\"flex items-center gap-2 text-muted-foreground mb-3 md:justify-end\">\n                    Next Article\n                    <ArrowLeft className=\"w-4 h-4 rotate-180\" />\n                  </div>\n                  <h3 className=\"font-semibold group-hover:text-primary transition-colors\">\n                    {nextPost.title}\n                  </h3>\n                </a>\n              </Link>\n            )}\n          </div>\n\n          {/* Back to Blog */}\n          <div className=\"text-center\">\n            <Link href=\"/blog\">\n              <a className=\"inline-flex items-center gap-2 px-6 py-3 glass-strong rounded-lg hover:bg-white/10 transition-colors font-medium\">\n                <ArrowLeft className=\"w-5 h-5\" />\n                Back to All Articles\n              </a>\n            </Link>\n          </div>\n        </article>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":6346},"client/src/pages/blog/index.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport { Calendar, Clock, Search, Tag } from \"lucide-react\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport { blogPosts } from \"@/lib/content\";\nimport { Input } from \"@/components/ui/input\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\n\nexport default function BlogIndex() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedTag, setSelectedTag] = useState<string | null>(null);\n\n  useGSAP(() => {\n    if (!window.gsap) return;\n\n    window.gsap.from(\".blog-post-card\", {\n      opacity: 0,\n      y: 50,\n      stagger: 0.1,\n      scrollTrigger: {\n        trigger: \".blog-post-card\",\n        start: \"top 80%\",\n      },\n    });\n  }, []);\n\n  const allTags = Array.from(new Set(blogPosts.flatMap((post) => post.tags)));\n\n  const filteredPosts = blogPosts.filter((post) => {\n    const matchesSearch =\n      post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      post.summary.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesTag = selectedTag ? post.tags.includes(selectedTag) : true;\n    return matchesSearch && matchesTag;\n  });\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"text-center mb-16\"\n          >\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-bold mb-6\">\n              Insights & Updates\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Exploring the latest in AI, immersive technologies, and enterprise innovation\n            </p>\n          </motion.div>\n\n          {/* Search & Filters */}\n          <div className=\"mb-12\">\n            <div className=\"relative mb-6\">\n              <Search className=\"absolute left-4 top-1/2 -translate-y-1/2 w-5 h-5 text-muted-foreground\" />\n              <Input\n                type=\"text\"\n                placeholder=\"Search articles...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-12 glass-strong border-border h-12 text-base\"\n                data-testid=\"input-search-blog\"\n              />\n            </div>\n\n            <div className=\"flex flex-wrap gap-3\">\n              <button\n                onClick={() => setSelectedTag(null)}\n                className={`px-4 py-2 rounded-lg font-medium transition-colors ${\n                  selectedTag === null\n                    ? \"bg-primary text-primary-foreground\"\n                    : \"glass border border-border hover:bg-white/10\"\n                }`}\n                data-testid=\"button-tag-all\"\n              >\n                All\n              </button>\n              {allTags.map((tag) => (\n                <button\n                  key={tag}\n                  onClick={() => setSelectedTag(tag)}\n                  className={`px-4 py-2 rounded-lg font-medium transition-colors ${\n                    selectedTag === tag\n                      ? \"bg-primary text-primary-foreground\"\n                      : \"glass border border-border hover:bg-white/10\"\n                  }`}\n                  data-testid={`button-tag-${tag.toLowerCase()}`}\n                >\n                  {tag}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Blog Posts */}\n          <div className=\"space-y-8\">\n            {filteredPosts.map((post, index) => (\n              <Link key={post.slug} href={`/blog/${post.slug}`}>\n                <a>\n                  <motion.article\n                    initial={{ opacity: 0, y: 30 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                    className=\"blog-post-card glass-strong rounded-xl overflow-hidden hover:bg-white/10 transition-all group cursor-pointer\"\n                    data-testid={`card-blog-${post.slug}`}\n                  >\n                    <div className=\"md:flex\">\n                      <div className=\"md:w-96 h-64 md:h-auto flex-shrink-0 overflow-hidden\">\n                        <img\n                          src={post.heroImage}\n                          alt={post.title}\n                          className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n                        />\n                      </div>\n                      <div className=\"p-8 flex-1\">\n                        <div className=\"flex items-center gap-4 text-sm text-muted-foreground mb-4\">\n                          <span className=\"flex items-center gap-1\">\n                            <Calendar className=\"w-4 h-4\" />\n                            {new Date(post.date).toLocaleDateString(\"en-US\", {\n                              year: \"numeric\",\n                              month: \"long\",\n                              day: \"numeric\",\n                            })}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <Clock className=\"w-4 h-4\" />\n                            {post.readingTime} min read\n                          </span>\n                        </div>\n\n                        <h2 className=\"text-2xl font-serif font-bold mb-3 group-hover:text-primary transition-colors\">\n                          {post.title}\n                        </h2>\n                        \n                        <p className=\"text-muted-foreground mb-4 line-clamp-2\">\n                          {post.summary}\n                        </p>\n\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-2\">\n                            <Tag className=\"w-4 h-4 text-muted-foreground\" />\n                            <div className=\"flex flex-wrap gap-2\">\n                              {post.tags.map((tag) => (\n                                <span\n                                  key={tag}\n                                  className=\"px-3 py-1 glass rounded-full text-xs font-medium\"\n                                >\n                                  {tag}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n\n                          <span className=\"text-primary font-semibold flex items-center gap-2 group-hover:gap-3 transition-all\">\n                            Read More\n                            <svg\n                              className=\"w-5 h-5\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              viewBox=\"0 0 24 24\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M9 5l7 7-7 7\"\n                              />\n                            </svg>\n                          </span>\n                        </div>\n\n                        <div className=\"mt-4 pt-4 border-t border-border\">\n                          <p className=\"text-sm text-muted-foreground\">\n                            By {post.author}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.article>\n                </a>\n              </Link>\n            ))}\n          </div>\n\n          {filteredPosts.length === 0 && (\n            <div className=\"text-center py-20\">\n              <p className=\"text-xl text-muted-foreground\">\n                No articles found matching your criteria.\n              </p>\n            </div>\n          )}\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":8176},"client/src/pages/industries/[slug].tsx":{"content":"import { useRoute, Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Check, ArrowRight } from \"lucide-react\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport BreadcrumbNav from \"@/components/ui/breadcrumb-nav\";\nimport { industries, technologies, services } from \"@/lib/content\";\nimport NotFound from \"@/pages/not-found\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\nimport { useRef } from \"react\";\n\nexport default function IndustryDetail() {\n  const [, params] = useRoute(\"/industries/:slug\");\n  const industry = industries.find((i) => i.slug === params?.slug);\n  const metricsRef = useRef<HTMLDivElement>(null);\n\n  useGSAP(() => {\n    if (!window.gsap || !metricsRef.current) return;\n\n    const metrics = metricsRef.current.querySelectorAll(\".metric-value\");\n    metrics.forEach((metric) => {\n      const target = metric.getAttribute(\"data-value\") || \"0\";\n      window.gsap.to(metric, {\n        innerHTML: target,\n        duration: 2,\n        scrollTrigger: {\n          trigger: metric,\n          start: \"top 80%\",\n        },\n        snap: { innerHTML: 1 },\n      });\n    });\n  }, [industry]);\n\n  if (!industry) {\n    return <NotFound />;\n  }\n\n  const relatedTechs = technologies.filter((t) =>\n    industry.technologies.includes(t.slug)\n  );\n  const relatedServices = services.filter((s) =>\n    industry.services.includes(s.slug)\n  );\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <BreadcrumbNav\n            items={[\n              { label: \"Industries\", href: \"/industries\" },\n              { label: industry.title },\n            ]}\n          />\n\n          {/* Hero Section */}\n          <div className=\"relative h-[500px] rounded-2xl overflow-hidden mb-16\">\n            <img\n              src={industry.heroImage}\n              alt={industry.title}\n              className=\"w-full h-full object-cover\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-background via-background/60 to-transparent\"></div>\n            \n            <div className=\"absolute bottom-0 left-0 right-0 p-12\">\n              <motion.h1\n                initial={{ opacity: 0, y: 30 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"text-5xl sm:text-6xl font-serif font-bold mb-4\"\n              >\n                {industry.title}\n              </motion.h1>\n              <motion.p\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"text-2xl text-muted-foreground\"\n              >\n                {industry.tagline}\n              </motion.p>\n            </div>\n          </div>\n\n          {/* Overview */}\n          <section className=\"mb-20\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              className=\"max-w-4xl\"\n            >\n              <h2 className=\"text-3xl font-serif font-bold mb-6\">Overview</h2>\n              <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                {industry.overview}\n              </p>\n            </motion.div>\n          </section>\n\n          {/* Use Cases */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-10\">Key Use Cases</h2>\n            <div className=\"grid md:grid-cols-2 gap-8\">\n              {industry.useCases.map((useCase, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, x: -30 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  className=\"glass-strong rounded-xl p-6 hover:bg-white/10 transition-colors\"\n                >\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-12 h-12 rounded-lg bg-primary/20 flex items-center justify-center flex-shrink-0\">\n                      <Check className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold mb-2\">{useCase.title}</h3>\n                      <p className=\"text-muted-foreground\">{useCase.description}</p>\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </section>\n\n          {/* Our Approach */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-10\">Our Approach</h2>\n            <div className=\"relative\">\n              <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-border hidden md:block\"></div>\n              \n              <div className=\"space-y-8\">\n                {industry.approach.map((step, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, x: -30 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                    className=\"relative pl-0 md:pl-20\"\n                  >\n                    <div className=\"absolute left-0 top-0 w-16 h-16 rounded-full glass-strong flex items-center justify-center text-2xl font-bold text-primary hidden md:flex\">\n                      {index + 1}\n                    </div>\n                    <div className=\"glass-strong rounded-xl p-6\">\n                      <h3 className=\"text-xl font-semibold mb-3\">{step.step}</h3>\n                      <p className=\"text-muted-foreground\">{step.description}</p>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Metrics */}\n          <section className=\"mb-20\" ref={metricsRef}>\n            <div className=\"glass-strong rounded-2xl p-12\">\n              <h2 className=\"text-3xl font-serif font-bold mb-10 text-center\">\n                Proven Results\n              </h2>\n              <div className=\"grid md:grid-cols-3 gap-8\">\n                {industry.metrics.map((metric, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    whileInView={{ opacity: 1, scale: 1 }}\n                    transition={{ delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                    className=\"text-center\"\n                  >\n                    <div\n                      className=\"metric-value text-5xl font-bold text-primary mb-2\"\n                      data-value={metric.value}\n                    >\n                      0\n                    </div>\n                    <div className=\"text-lg text-muted-foreground\">{metric.label}</div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Related Technologies & Services */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-10\">\n              Technologies & Services\n            </h2>\n            \n            <div className=\"grid md:grid-cols-2 gap-12\">\n              {/* Technologies */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-6\">Technologies We Use</h3>\n                <div className=\"flex flex-wrap gap-3\">\n                  {relatedTechs.map((tech) => (\n                    <Link key={tech.slug} href={`/technology/${tech.slug}`}>\n                      <a className=\"px-4 py-2 glass rounded-lg hover:bg-primary/20 transition-colors border border-border\">\n                        {tech.title}\n                      </a>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n\n              {/* Services */}\n              <div>\n                <h3 className=\"text-xl font-semibold mb-6\">Related Services</h3>\n                <div className=\"flex flex-wrap gap-3\">\n                  {relatedServices.map((service) => (\n                    <Link\n                      key={service.slug}\n                      href={`/technology/services/${service.slug}`}\n                    >\n                      <a className=\"px-4 py-2 glass rounded-lg hover:bg-secondary/20 transition-colors border border-border\">\n                        {service.title}\n                      </a>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* CTA */}\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            className=\"glass-strong rounded-2xl p-12 text-center\"\n          >\n            <h2 className=\"text-3xl font-serif font-bold mb-4\">\n              Ready to Transform Your {industry.title} Operations?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Let's discuss how our AI solutions can drive measurable results for your\n              organization.\n            </p>\n            <Link href=\"/contact\">\n              <a className=\"inline-flex items-center gap-2 px-8 py-4 bg-primary text-primary-foreground rounded-lg font-semibold text-lg hover:bg-primary/90 transition-all hover:scale-105\">\n                Discuss Your Use Case\n                <ArrowRight className=\"w-5 h-5\" />\n              </a>\n            </Link>\n          </motion.section>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":9806},"client/src/pages/industries/index.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport { industries } from \"@/lib/content\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\n\nexport default function IndustriesIndex() {\n  useGSAP(() => {\n    if (!window.gsap) return;\n\n    window.gsap.from(\".industry-card\", {\n      opacity: 0,\n      y: 50,\n      stagger: 0.15,\n      scrollTrigger: {\n        trigger: \".industry-card\",\n        start: \"top 80%\",\n      },\n    });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-bold mb-6\">\n              Industries We Transform\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Delivering AI-powered innovation across diverse sectors, from agriculture to\n              renewable energy\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {industries.map((industry, index) => (\n              <Link key={industry.slug} href={`/industries/${industry.slug}`}>\n                <a>\n                  <motion.div\n                    initial={{ opacity: 0, scale: 0.95 }}\n                    whileInView={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.4, delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                    className=\"industry-card group relative h-[500px] rounded-2xl overflow-hidden glass-strong cursor-pointer\"\n                    data-testid={`card-industry-${industry.slug}`}\n                  >\n                    <img\n                      src={industry.heroImage}\n                      alt={industry.title}\n                      className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-700\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-background via-background/80 to-transparent opacity-90 group-hover:opacity-100 transition-opacity\"></div>\n                    \n                    <div className=\"absolute bottom-0 left-0 right-0 p-8 transform group-hover:-translate-y-2 transition-transform duration-300\">\n                      <h2 className=\"text-3xl font-serif font-bold mb-3 text-foreground\">\n                        {industry.title}\n                      </h2>\n                      <p className=\"text-muted-foreground mb-4\">{industry.tagline}</p>\n                      \n                      <div className=\"opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                        <span className=\"inline-flex items-center text-primary font-semibold\">\n                          Explore Industry\n                          <svg\n                            className=\"w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              strokeWidth=\"2\"\n                              d=\"M9 5l7 7-7 7\"\n                            />\n                          </svg>\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"absolute top-6 right-6 w-16 h-16 rounded-full bg-primary/20 backdrop-blur-sm flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                      <svg\n                        className=\"w-8 h-8 text-primary\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M9 5l7 7-7 7\"\n                        />\n                      </svg>\n                    </div>\n                  </motion.div>\n                </a>\n              </Link>\n            ))}\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":4723},"client/src/pages/technology/[slug].tsx":{"content":"import { useRoute, Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { ArrowRight, ChevronDown } from \"lucide-react\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport BreadcrumbNav from \"@/components/ui/breadcrumb-nav\";\nimport { technologies, services } from \"@/lib/content\";\nimport NotFound from \"@/pages/not-found\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\n\nexport default function TechnologyDetail() {\n  const [, params] = useRoute(\"/technology/:slug\");\n  const technology = technologies.find((t) => t.slug === params?.slug);\n\n  if (!technology) {\n    return <NotFound />;\n  }\n\n  const relatedServices = services.filter((s) =>\n    technology.relatedServices.includes(s.slug)\n  );\n\n  const faqs = [\n    {\n      question: `What makes ${technology.title} effective?`,\n      answer: `${technology.title} combines state-of-the-art algorithms with proven methodologies, delivering reliable results in production environments. Our implementations prioritize accuracy, scalability, and ethical considerations.`,\n    },\n    {\n      question: \"How long does implementation take?\",\n      answer: \"Implementation timelines vary based on project scope and complexity. Typical projects range from 8-16 weeks for MVP deployment, with ongoing optimization and enhancement thereafter.\",\n    },\n    {\n      question: \"What kind of support do you provide?\",\n      answer: \"We offer comprehensive support including initial training, documentation, ongoing maintenance, performance monitoring, and regular model updates to ensure continued effectiveness.\",\n    },\n    {\n      question: \"Can this integrate with our existing systems?\",\n      answer: \"Yes, our solutions are designed with integration in mind. We work with your existing infrastructure, APIs, and data sources to ensure seamless deployment and minimal disruption.\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <BreadcrumbNav\n            items={[\n              { label: \"Technology\", href: \"/technology\" },\n              { label: technology.title },\n            ]}\n          />\n\n          {/* Hero */}\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mb-16\"\n          >\n            <div className=\"flex items-start gap-6 mb-8\">\n              <div className=\"w-24 h-24 rounded-2xl bg-gradient-to-br from-primary to-secondary flex items-center justify-center flex-shrink-0\">\n                <svg\n                  className=\"w-12 h-12 text-white\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d={technology.icon}\n                  />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-4xl sm:text-5xl font-serif font-bold mb-4\">\n                  {technology.title}\n                </h1>\n                <p className=\"text-xl text-muted-foreground\">\n                  {technology.shortDescription}\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* What It Is */}\n          <section className=\"mb-20\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              className=\"glass-strong rounded-2xl p-10\"\n            >\n              <h2 className=\"text-3xl font-serif font-bold mb-6\">What It Is</h2>\n              <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                {technology.longDescription}\n              </p>\n            </motion.div>\n          </section>\n\n          {/* Applications */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-10\">\n              Where We Apply It\n            </h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {technology.applications.map((application, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, x: -30 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  className=\"glass rounded-xl p-6 hover:bg-white/10 transition-colors\"\n                >\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-10 h-10 rounded-lg bg-primary/20 flex items-center justify-center flex-shrink-0\">\n                      <svg\n                        className=\"w-5 h-5 text-primary\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M5 13l4 4L19 7\"\n                        />\n                      </svg>\n                    </div>\n                    <p className=\"text-lg\">{application}</p>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </section>\n\n          {/* Related Services */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-10\">Related Services</h2>\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              {relatedServices.map((service, index) => (\n                <Link key={service.slug} href={`/technology/services/${service.slug}`}>\n                  <a>\n                    <motion.div\n                      initial={{ opacity: 0, y: 30 }}\n                      whileInView={{ opacity: 1, y: 0 }}\n                      transition={{ delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                      className=\"glass-strong rounded-xl p-6 hover:bg-white/10 transition-all hover:-translate-y-2 cursor-pointer h-full\"\n                    >\n                      <div className=\"w-14 h-14 rounded-lg bg-secondary/20 flex items-center justify-center mb-4\">\n                        <svg\n                          className=\"w-7 h-7 text-secondary\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d={service.icon}\n                          />\n                        </svg>\n                      </div>\n                      <h3 className=\"text-lg font-semibold mb-2\">{service.title}</h3>\n                      <p className=\"text-sm text-muted-foreground mb-4\">\n                        {service.summary.substring(0, 100)}...\n                      </p>\n                      <span className=\"text-secondary font-medium flex items-center gap-1\">\n                        Learn More\n                        <ArrowRight className=\"w-4 h-4\" />\n                      </span>\n                    </motion.div>\n                  </a>\n                </Link>\n              ))}\n            </div>\n          </section>\n\n          {/* FAQ */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-10\">\n              Frequently Asked Questions\n            </h2>\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              className=\"glass-strong rounded-xl p-8\"\n            >\n              <Accordion type=\"single\" collapsible className=\"space-y-4\">\n                {faqs.map((faq, index) => (\n                  <AccordionItem key={index} value={`item-${index}`} className=\"border-border\">\n                    <AccordionTrigger className=\"text-lg font-semibold hover:text-primary\">\n                      {faq.question}\n                    </AccordionTrigger>\n                    <AccordionContent className=\"text-muted-foreground\">\n                      {faq.answer}\n                    </AccordionContent>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </motion.div>\n          </section>\n\n          {/* CTA */}\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            className=\"glass-strong rounded-2xl p-12 text-center\"\n          >\n            <h2 className=\"text-3xl font-serif font-bold mb-4\">\n              Explore {technology.title} for Your Project\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Discover how this technology can transform your operations and deliver\n              measurable business value.\n            </p>\n            <Link href=\"/contact\">\n              <a className=\"inline-flex items-center gap-2 px-8 py-4 bg-primary text-primary-foreground rounded-lg font-semibold text-lg hover:bg-primary/90 transition-all hover:scale-105\">\n                Talk to an Expert\n                <ArrowRight className=\"w-5 h-5\" />\n              </a>\n            </Link>\n          </motion.section>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":9816},"client/src/pages/technology/index.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport AtomVisualization from \"@/components/technology/atom-visualization\";\nimport { services } from \"@/lib/content\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\n\nexport default function TechnologyIndex() {\n  useGSAP(() => {\n    if (!window.gsap) return;\n\n    window.gsap.from(\".service-card\", {\n      opacity: 0,\n      y: 50,\n      stagger: 0.2,\n      scrollTrigger: {\n        trigger: \".service-card\",\n        start: \"top 80%\",\n      },\n    });\n  }, []);\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-20\"\n          >\n            <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-bold mb-6\">\n              Our Technology & Services\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Cutting-edge solutions powered by AI, immersive technologies, and enterprise\n              automation\n            </p>\n          </motion.div>\n\n          {/* Services Section */}\n          <section className=\"mb-32\">\n            <h2 className=\"text-3xl font-serif font-bold mb-12 text-center\">\n              Our Services\n            </h2>\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              {services.map((service, index) => (\n                <Link key={service.slug} href={`/technology/services/${service.slug}`}>\n                  <a>\n                    <motion.div\n                      initial={{ opacity: 0, y: 50 }}\n                      whileInView={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.4, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                      whileHover={{ y: -8, transition: { duration: 0.2 } }}\n                      className=\"service-card group glass-strong rounded-2xl p-8 cursor-pointer h-full\"\n                      data-testid={`card-service-${service.slug}`}\n                    >\n                      <div\n                        className={`w-20 h-20 rounded-xl ${\n                          index % 2 === 0 ? \"bg-primary/20\" : \"bg-secondary/20\"\n                        } flex items-center justify-center mb-6 group-hover:scale-110 transition-transform`}\n                      >\n                        <svg\n                          className={`w-10 h-10 ${\n                            index % 2 === 0 ? \"text-primary\" : \"text-secondary\"\n                          }`}\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d={service.icon}\n                          />\n                        </svg>\n                      </div>\n                      <h3 className=\"text-2xl font-serif font-semibold mb-4\">\n                        {service.title}\n                      </h3>\n                      <p className=\"text-muted-foreground mb-6\">{service.summary}</p>\n                      <div className=\"flex items-center gap-2 text-primary font-semibold group-hover:gap-3 transition-all\">\n                        Learn More\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M9 5l7 7-7 7\"\n                          />\n                        </svg>\n                      </div>\n                    </motion.div>\n                  </a>\n                </Link>\n              ))}\n            </div>\n          </section>\n\n          {/* Atom Visualization Section */}\n          <section>\n            <div className=\"text-center mb-20\">\n              <h2 className=\"text-3xl sm:text-4xl lg:text-5xl font-serif font-bold mb-4\">\n                Our Technology Stack\n              </h2>\n              <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n                Explore our core technologies powering intelligent solutions\n              </p>\n            </div>\n\n            <AtomVisualization />\n          </section>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":4931},"client/src/pages/technology/services/[slug].tsx":{"content":"import { useRoute, Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { Check, ArrowRight } from \"lucide-react\";\nimport Header from \"@/components/layout/header\";\nimport Footer from \"@/components/layout/footer\";\nimport BreadcrumbNav from \"@/components/ui/breadcrumb-nav\";\nimport { services } from \"@/lib/content\";\nimport NotFound from \"@/pages/not-found\";\nimport { useGSAP } from \"@/lib/gsap-utils\";\n\nexport default function ServiceDetail() {\n  const [, params] = useRoute(\"/technology/services/:slug\");\n  const service = services.find((s) => s.slug === params?.slug);\n\n  useGSAP(() => {\n    if (!window.gsap) return;\n\n    window.gsap.from(\".process-step\", {\n      opacity: 0,\n      x: -50,\n      stagger: 0.15,\n      scrollTrigger: {\n        trigger: \".process-step\",\n        start: \"top 80%\",\n      },\n    });\n  }, [service]);\n\n  if (!service) {\n    return <NotFound />;\n  }\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n\n      <main className=\"pt-32 pb-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <BreadcrumbNav\n            items={[\n              { label: \"Technology\", href: \"/technology\" },\n              { label: \"Services\", href: \"/technology\" },\n              { label: service.title },\n            ]}\n          />\n\n          {/* Hero */}\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"mb-16\"\n          >\n            <div className=\"flex items-start gap-6 mb-8\">\n              <div className=\"w-24 h-24 rounded-2xl bg-primary/20 flex items-center justify-center flex-shrink-0\">\n                <svg\n                  className=\"w-12 h-12 text-primary\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d={service.icon}\n                  />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-4xl sm:text-5xl font-serif font-bold mb-4\">\n                  {service.title}\n                </h1>\n                <p className=\"text-xl text-muted-foreground\">{service.summary}</p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* What's Included */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-8\">What's Included</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {service.included.map((item, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  className=\"flex items-start gap-4 glass rounded-xl p-6\"\n                >\n                  <div className=\"w-8 h-8 rounded-full bg-primary/20 flex items-center justify-center flex-shrink-0\">\n                    <Check className=\"w-5 h-5 text-primary\" />\n                  </div>\n                  <p className=\"text-muted-foreground\">{item}</p>\n                </motion.div>\n              ))}\n            </div>\n          </section>\n\n          {/* Process */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-10\">Our Process</h2>\n            <div className=\"relative\">\n              <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-border hidden md:block\"></div>\n              \n              <div className=\"space-y-8\">\n                {service.process.map((step, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, x: -50 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                    className=\"process-step relative pl-0 md:pl-20\"\n                  >\n                    <div className=\"absolute left-0 top-0 w-16 h-16 rounded-full bg-gradient-to-br from-primary to-secondary flex items-center justify-center text-2xl font-bold text-white hidden md:flex\">\n                      {index + 1}\n                    </div>\n                    <div className=\"glass-strong rounded-xl p-8 hover:bg-white/10 transition-colors\">\n                      <h3 className=\"text-2xl font-semibold mb-3\">{step.step}</h3>\n                      <p className=\"text-muted-foreground text-lg\">{step.description}</p>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* Deliverables */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-8\">Deliverables</h2>\n            <div className=\"glass-strong rounded-xl p-8\">\n              <ul className=\"space-y-4\">\n                {service.deliverables.map((deliverable, index) => (\n                  <motion.li\n                    key={index}\n                    initial={{ opacity: 0, x: -20 }}\n                    whileInView={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.05 }}\n                    viewport={{ once: true }}\n                    className=\"flex items-start gap-3\"\n                  >\n                    <Check className=\"w-6 h-6 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-lg\">{deliverable}</span>\n                  </motion.li>\n                ))}\n              </ul>\n            </div>\n          </section>\n\n          {/* Tools & Technologies */}\n          <section className=\"mb-20\">\n            <h2 className=\"text-3xl font-serif font-bold mb-8\">\n              Tools & Technologies\n            </h2>\n            <div className=\"flex flex-wrap gap-4\">\n              {service.tools.map((tool, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: index * 0.05 }}\n                  viewport={{ once: true }}\n                  className=\"px-6 py-3 glass-strong rounded-lg font-mono text-sm\"\n                >\n                  {tool}\n                </motion.div>\n              ))}\n            </div>\n          </section>\n\n          {/* CTA */}\n          <motion.section\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            className=\"glass-strong rounded-2xl p-12 text-center\"\n          >\n            <h2 className=\"text-3xl font-serif font-bold mb-4\">\n              Ready to Get Started?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Let's discuss how this service can transform your business operations and\n              accelerate your goals.\n            </p>\n            <Link href=\"/contact\">\n              <a className=\"inline-flex items-center gap-2 px-8 py-4 bg-primary text-primary-foreground rounded-lg font-semibold text-lg hover:bg-primary/90 transition-all hover:scale-105\">\n                Schedule a Consultation\n                <ArrowRight className=\"w-5 h-5\" />\n              </a>\n            </Link>\n          </motion.section>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":7562}},"version":1}